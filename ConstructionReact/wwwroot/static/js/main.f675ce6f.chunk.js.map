{"version":3,"sources":["components/Submit.tsx","components/FormOneSubmit.tsx","store/store.tsx","store/reducer.tsx","components/Button/Button.tsx","store/store/AddEditMachine/AddEditMachine.tsx","store/reducers/AddEditMachine/AddEditMachine.tsx","store/store/DeleteMachinePath/DeleteMachinePath.tsx","store/reducers/DeleteMachinePath/DeleteMachinePath.tsx","store/store/UpdateRoomInConstruction/ConstructionId.tsx","store/reducers/UpdateRoomInConstruction/ConstructionId.tsx","components/Room.tsx","store/store/AddEditRoom/AddEditRoom.tsx","store/reducers/AddEditRoom/AddEditRoom.tsx","store/store/UpdateRoomInConstruction/UpdateRoomInConstruction.tsx","store/reducers/UpdateRoomInConstruction/UpdateRoomInConstruction.tsx","components/Indicate/Indicate.tsx","components/Construction.tsx","store/store/AddEditConstruction/AddEditConstruction.tsx","store/reducers/AddEditConstruction/AddEditConstruction.tsx","store/store/ConstructionJSONArr/ConstructionJSONArr.tsx","store/reducers/ConstructionJSONArr/ConstructionJSONArr.tsx","components/Hierarchy.tsx","store/actions.tsx","components/table/Control/VerticalBorder.ts","components/table/View/Column.ts","components/table/View/LineFacade.ts","components/table/View/LineHeader.ts","components/table/View/Line.ts","components/table/View/CreatorLine.ts","components/table/View/RightWidth.ts","components/table/View/LeftWidth.ts","components/table/View/ColumnFacade.ts","components/table/View/ColumnLineFacade.ts","components/table/Control/MaxMargin.ts","components/table/Control/MinMargin.ts","components/table/Control/BordersFacade.ts","components/table/Table.tsx","App.tsx","serviceWorker.ts","components/Input/Input.tsx","components/AddEditConstruction/AddEditConstruction.tsx","components/AddEditRoom/AddEditRoom.tsx","components/AddEditMachine/AddEditMachine.tsx","index.tsx"],"names":["Submit","className","type","value","this","props","name","Component","FormOneSubmit","onSubmit","GetData","bind","ev","preventDefault","formData","FormData","currentTarget","EventGetData","store","createStore","state","action","machineJSONArr","push","machineJSON","filter","element","dispatch","data-construction-item","dataSetConstruction","data-room-item","dataSetRoom","onClick","ClickHandler","storeAddEditMachine","payload","visible","headerName","submitName","path","editPath","id","createYear","roomId","storeDeleteMachinePath","deletePath","storeConstructionIdUpdate","constructionId","Room","prop","machineInRoomPath","machineInRoomPathEdit","machineInRoomPathAdd","visibleButton","AddMachineInRoom","roomJSON","GetMachineInRoom","append","fetch","method","body","response","json","console","warn","storeAddEditRoom","UpdateCallback","UpdateCallBack","floor","haveMachine","storeUpdate","updateFunction","Indicate","style","indicate","backgroundColor","Construction","roomInConstructorPath","editMachineInConstructionPath","constructionJSON","roomJSONArr","showContent","subscribe","UpdateRoomInConstruction","GetRoomsInConstruction","AddRoomInConstruction","GetMachineInConstruction","map","item","EditRoom","DeleteRoomInConstruction","dataset","roomItem","Number","SetRoomJSONArr","GetRooms","setState","JSONArr","getState","storeAddEditConstruction","address","storeConstructionJSONArr","constructionJSONArr","Hierarchy","constructionPath","mouseX","handleX","currentMargin","border","mouseMoveHandler","MouseMoveHandler","moveTouch","MoveBlockTouch","Init","width","minWidth","AddConstruction","EditConstruction","DeleteConstruction","left","onMouseDown","AddEventMouseMove","onTouchStart","AddEventTouchMove","constructionItem","GetConstructions","document","removeEventListener","TouchCancelListener","event","clientX","addEventListener","MouseUpListener","getBoundingClientRect","parentElement","MoveHandle","offsetWidth","targetTouches","pageX","React","addMachine","deleteMachine","setMachineArr","VerticalBorder","minMargin","maxMargin","verticalBorder","verticalBorderContent","setSelectValue","observer","Create","AddClasses","AddContentHtml","AddListener","createElement","classList","add","appendChild","Notify","percent","remove","controlObserver","index","indexOf","splice","undefined","forEach","el","SetCoordinatePercent","Column","column","coordinate","changeWidth","changeLeft","CreateElements","AddContentHTML","height","offsetHeight","coordinatePercent","HeightParentElement","elementHTML","childNodes","length","child","lastChild","removeChild","LineControl","lineArr","verticalBorderArr","addLineArr","selectLine","methodGetSelectLine","ToLinkLines","AddObserversInVerticalBorders","ind","AddObserver","contentLine","concat","GetElementArr","slice","ToLinkLinesAddArr","Concat","GetSelect","LineHeader","contentLineArr","heightArr","containerContentLineArr","container","sort","Compare","a","b","Line","linesChange","select","AddListeners","ClickContainerListener","SelectContainerHover","SelectElementHandlerOff","SelectElement","SelectElementOff","lineChange","ChangeLine","CreatorLine","count","contentArr","num","i","line","RightWidthMove","ChangeWidthRight","LeftWidthMove","ChangeWidthLeft","ColumnControl","columnArr","leftWidthMoveArr","rightWidthMoveArr","AddObserversMove","AddContent","DeleteContent","ColumnLineFacade","lineHeader","lineFacade","columnControl","methodSelectLine","CreateColumn","CreateLines","creatorLine","FactoryMethod","AddContentHTMLInColumn","SetMethodGetSelectLine","MaxMargin","maxValue","SetMaxMargin","MinMargin","minValue","SetMinMargin","BordersControl","bordersArr","nextElement","middleWidth","SetCurrentMarginPercent","GetSetSelectValue","Table","header","names","columnCount","currentElement","size","bordersControl","columnLineFacade","CreateHeader","CreateLineArr","ChangeContent","ref","refs","table","elHTML","innerText","elId","elName","elYear","cont","IntervalCheckSize","GetVerticalBorderArr","SetSelectLine","SetDefaultPosition","AddLines","NewLines","NewContent","UpdatePosition","GetMachineJSON","setInterval","App","EditMachine","DeleteMachine","SetMachineJSON","responseConstruction","ConstructionJSONArr","connect","get","actions","Boolean","window","location","hostname","match","Input","text","defaultValue","visibleElement","SetConstructionJSON","Close","AddEditConstruction","AddEditRoom","SetVisible","AddEditMachine","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f675ce6f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Submit.scss';\r\n\r\ninterface ISubmitProps {\r\n  name: string;\r\n}\r\n\r\nexport default class Submit extends Component<ISubmitProps> {\r\n  render() {\r\n    return (\r\n      <input className='submit' type='submit' value={this.props.name} />\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Submit from './Submit';\r\nimport './FormOneSubmit.scss';\r\n\r\ninterface IFormOneSubmitProps {\r\n  name: string;\r\n  EventGetData: (formData: FormData) => Promise<void>;\r\n}\r\n\r\nexport default class FormOneSubmit extends Component<IFormOneSubmitProps> {\r\n  render() {\r\n    return (\r\n      <form className='form-one-submit' onSubmit={this.GetData.bind(this)}>\r\n        <Submit name={this.props.name}/>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  private GetData(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    let formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    this.props.EventGetData(formData);\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from './reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nstore.dispatch({\r\n  type: \"SET_STATE\",\r\n  state: {\r\n    machineJSONArr: []\r\n  }\r\n});\r\n\r\nexport default store;","import { addMachine, setState, deleteMachine, setMachineArr } from './actions';\r\n\r\ntype ActionTypes = ReturnType<typeof addMachine> | ReturnType<typeof setState> | ReturnType<typeof deleteMachine>\r\n| ReturnType<typeof setMachineArr> ;\r\n\r\nexport let reducer = function (state: any, action: ActionTypes) {\r\n    switch (action.type) {\r\n        case \"SET_STATE\":\r\n            return state = action.state;\r\n        case \"ADD_MACHINE\":\r\n            return state.machineJSONArr.push(action.machineJSON);\r\n        case \"DELETE_MACHINE\":\r\n            return (state.machineJSONArr as Array<any>).filter(\r\n                (element) => element !== action.machineJSON\r\n            );\r\n        case 'SET_MACHINEARR':\r\n            return state.machineJSONArr = action.machineJSONArr;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\ninterface ISubmitProps {\r\n  name: string;\r\n  ClickHandler?: (ev: React.MouseEvent) => void;\r\n  dataSetConstruction?: string;\r\n  dataSetRoom?: string\r\n}\r\n\r\nexport default class Submit extends Component<ISubmitProps> {\r\n  render() {\r\n    return (\r\n      <button\r\n        className='button-default'\r\n        data-construction-item={this.props.dataSetConstruction}\r\n        data-room-item={this.props.dataSetRoom}\r\n        onClick={this.props.ClickHandler}>\r\n        {this.props.name}</button>\r\n    );\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/AddEditMachine/AddEditMachine';\r\n\r\nconst storeAddEditMachine = createStore(reducer);\r\n\r\nstoreAddEditMachine.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: {\r\n    machineJSON: {\r\n      id: 0,\r\n      name: '',\r\n      createYear: 0,\r\n      roomId: 0\r\n    },\r\n    visible: false,\r\n    headerName: '',\r\n    submitName: '',\r\n    path: '',\r\n    editPath: ''\r\n  }\r\n});\r\n\r\nexport default storeAddEditMachine;","import { setMachineJSON, setState, setVisible, setHeaderName, setSubmitName, setPath, setEditPath } from '../../actions/AddEditMachine/AddEditMachine';\r\n\r\ntype ActionTypes = ReturnType<typeof setMachineJSON> |\r\n  ReturnType<typeof setState> |\r\n  ReturnType<typeof setVisible> |\r\n  ReturnType<typeof setHeaderName> |\r\n  ReturnType<typeof setPath> |\r\n  ReturnType<typeof setSubmitName> |\r\n  ReturnType<typeof setEditPath>;\r\n\r\nexport let reducer = function (state: {\r\n  machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  };\r\n  visible: boolean;\r\n  headerName: string;\r\n  submitName: string;\r\n  path: string,\r\n  editPath: string;\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return action.payload;\r\n    case \"SET_MACHINE_JSON\":\r\n      return { ...state, machineJSON: action.payload };\r\n    case 'SET_VISIBLE':\r\n      return { ...state, visible: action.payload }\r\n    case 'SET_HEADER_NAME':\r\n      return { ...state, headerName: action.payload }\r\n    case 'SET_SUBMIT_NAME':\r\n      return { ...state, submitName: action.payload }\r\n    case 'SET_PATH':\r\n      return { ...state, path: action.payload }\r\n    case 'SET_EDIT_PATH':\r\n      return { ...state, editPath: action.payload }\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/DeleteMachinePath/DeleteMachinePath';\r\n\r\nconst storeDeleteMachinePath = createStore(reducer);\r\n\r\nstoreDeleteMachinePath.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: null\r\n});\r\n\r\nexport default storeDeleteMachinePath;","import { setDeletePath, setState } from '../../actions/DeleteMachinePath/DeleteMachinePath';\r\n\r\ntype ActionTypes = ReturnType<typeof setDeletePath> | ReturnType<typeof setState>;\r\n\r\nexport const reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return action.payload;\r\n    case \"SET_DELETE_PATH\":\r\n      return { ...state, deletePath: action.payload }\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/UpdateRoomInConstruction/ConstructionId';\r\n\r\nconst storeConstructionIdUpdate = createStore(reducer);\r\n\r\nstoreConstructionIdUpdate.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: null\r\n});\r\n\r\nexport default storeConstructionIdUpdate;","import { setState, setConstructionId } from '../../actions/UpdateRoomInConstruction/ConstructionId';\r\n\r\ntype ActionTypes = ReturnType<typeof setState> | ReturnType<typeof setConstructionId>;;\r\n\r\nexport const reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case 'SET_STATE':\r\n      return action.payload;\r\n    case 'SET_CONSTRUCTION_ID':\r\n      return { ...state, constructionId: action.payload }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Room.scss';\r\nimport FormOneSubmit from './FormOneSubmit';\r\nimport store from '../store/store';\r\nimport Button from './Button/Button';\r\nimport storeAddEditMachine from '../store/store/AddEditMachine/AddEditMachine';\r\nimport storeDeleteMachinePath from './../store/store/DeleteMachinePath/DeleteMachinePath';\r\nimport storeConstructionIdUpdate from '../store/store/UpdateRoomInConstruction/ConstructionId';\r\n\r\n\r\ninterface IRoomProps {\r\n  roomJSON: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  };\r\n}\r\n\r\nexport default class Room extends Component<IRoomProps> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n    this.state = {\r\n      visibleButton: true\r\n    }\r\n  }\r\n  private machineJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }[];\r\n\r\n  private machineInRoomPath = 'Machines/GetMachinesInRoom';\r\n\r\n  private machineInRoomPathEdit = 'Machines/EditMachineInRoom';\r\n\r\n  private machineInRoomPathAdd = 'Machines/AddMachineInRoom';\r\n\r\n  render() {\r\n    return (\r\n      <div className='room'>\r\n        <div className='room__label'></div>\r\n        <div className='room__add-machine'>\r\n          <Button name='+' ClickHandler={this.AddMachineInRoom.bind(this)} />\r\n        </div>\r\n        <FormOneSubmit name={this.props.roomJSON.name} EventGetData={this.GetMachineInRoom.bind(this)}></FormOneSubmit>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  private async GetMachineInRoom(formData: FormData): Promise<void> {\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_EDIT_PATH',\r\n      payload: this.machineInRoomPathEdit\r\n    });\r\n\r\n    formData.append('roomId', `${this.props.roomJSON.id}`);\r\n    const response = await fetch(this.machineInRoomPath, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    this.machineJSONArr = await response.json();\r\n    store.dispatch({\r\n      type: \"SET_STATE\",\r\n      state: {\r\n        machineJSONArr: this.machineJSONArr\r\n      }\r\n    });\r\n\r\n    storeDeleteMachinePath.dispatch({\r\n      type: 'SET_DELETE_PATH',\r\n      payload: `Machines/DeleteMachineInRoom?roomId=${this.props.roomJSON.id}`\r\n    });\r\n\r\n    storeConstructionIdUpdate.dispatch({\r\n      type: 'SET_CONSTRUCTION_ID',\r\n      payload: this.props.roomJSON.constructionId\r\n    });\r\n  }\r\n\r\n  private AddMachineInRoom() {\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: true\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_MACHINE_JSON',\r\n      payload: {\r\n        id: null,\r\n        name: '',\r\n        createYear: null,\r\n        roomId: this.props.roomJSON.id\r\n      }\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_HEADER_NAME',\r\n      payload: `Добавить оборудование в комнату \"${this.props.roomJSON.name}\"`\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_SUBMIT_NAME',\r\n      payload: `Добавить оборудование`\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_PATH',\r\n      payload: this.machineInRoomPathAdd\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_EDIT_PATH',\r\n      payload: this.machineInRoomPathEdit\r\n    });\r\n\r\n    storeDeleteMachinePath.dispatch({\r\n      type: 'SET_DELETE_PATH',\r\n      payload: `Machines/DeleteMachineInRoom?constructionId=${this.props.roomJSON.id}`\r\n    });\r\n\r\n    console.warn(this.props.roomJSON.constructionId);\r\n\r\n    storeConstructionIdUpdate.dispatch({\r\n      type: 'SET_CONSTRUCTION_ID',\r\n      payload: this.props.roomJSON.constructionId\r\n    });\r\n  }\r\n\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/AddEditRoom/AddEditRoom';\r\n\r\nconst storeAddEditRoom = createStore(reducer);\r\n\r\nstoreAddEditRoom.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: {\r\n    visible: false,\r\n    UpdateCallBack: null,\r\n    roomJSON: {\r\n      id: 0,\r\n      name: '',\r\n      floor: 0,\r\n      constructionId: 0,\r\n      haveMachine: false,\r\n      headerName: '',\r\n      submitName: ''\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport default storeAddEditRoom;","import { setState, setVisible, setRoomJSON, setCallback, setPath, setHeaderName, setSubmitName } from '../../actions/AddEditRoom/AddEditRoom';\r\n\r\ntype ActionTypes = ReturnType<typeof setRoomJSON>\r\n  | ReturnType<typeof setState>\r\n  | ReturnType<typeof setVisible>\r\n  | ReturnType<typeof setCallback>\r\n  | ReturnType<typeof setPath>\r\n  | ReturnType<typeof setHeaderName>\r\n  | ReturnType<typeof setSubmitName>;\r\n\r\nexport let reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return action.payload\r\n    case \"SET_VISIBLE\":\r\n      return { ...state, visible: action.payload }\r\n    case \"SET_ROOM_JSON\":\r\n      return { ...state, roomJSON: action.payload }\r\n    case \"SET_CALLBACK\":\r\n      return { ...state, UpdateCallback: action.payload }\r\n    case \"SET_PATH\":\r\n      return { ...state, path: action.payload }\r\n    case \"SET_HEADER_NAME\":\r\n      return { ...state, headerName: action.payload }\r\n    case \"SET_SUBMIT_NAME\":\r\n      return { ...state, submitName: action.payload }\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/UpdateRoomInConstruction/UpdateRoomInConstruction';\r\n\r\nconst storeUpdate = createStore(reducer);\r\n\r\nstoreUpdate.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: null\r\n});\r\n\r\nexport default storeUpdate;","import { setUpdate, setState } from '../../actions/UpdateRoomInConstruction/UpdateRoomInConstruction';\r\n\r\ntype ActionTypes = ReturnType<typeof setUpdate> | ReturnType<typeof setState>;\r\n\r\nexport const reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case 'SET_STATE':\r\n      return action.payload;\r\n    case 'SET_UPDATE':\r\n      return { ...state, updateFunction: action.payload }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Indicate.scss';\r\n\r\n\r\ninterface IIndicateProps {\r\n  indicate: boolean;\r\n}\r\n\r\nexport default class Indicate extends Component<IIndicateProps>{\r\n  render() {\r\n    return (\r\n      <div className='indicate' style={this.props.indicate ? { backgroundColor: 'green' } : { backgroundColor: 'red' }}></div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Construction.scss';\r\nimport FormOneSubmit from './FormOneSubmit';\r\nimport Room from './Room';\r\nimport Submit from './Submit';\r\nimport store from '../store/store';\r\nimport Button from './Button/Button';\r\nimport storeAddEditRoom from '../store/store/AddEditRoom/AddEditRoom';\r\nimport storeAddEditMachine from '../store/store/AddEditMachine/AddEditMachine';\r\nimport storeDeleteMachinePath from '../store/store/DeleteMachinePath/DeleteMachinePath';\r\nimport storeUpdate from '../store/store/UpdateRoomInConstruction/UpdateRoomInConstruction';\r\nimport storeConstructionIdUpdate from '../store/store/UpdateRoomInConstruction/ConstructionId';\r\nimport Indicate from './Indicate/Indicate';\r\n\r\n\r\ninterface IConstructionProps {\r\n  constructionJSON: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n  };\r\n}\r\n\r\ninterface IConstructionState {\r\n  showContent: boolean;\r\n  visibleButton: boolean;\r\n  roomJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  }[];\r\n}\r\n\r\nexport default class Construction extends Component<IConstructionProps, IConstructionState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      visibleButton: true,\r\n      roomJSONArr: [],\r\n      showContent: false,\r\n    }\r\n\r\n    storeUpdate.subscribe(this.UpdateRoomInConstruction.bind(this));\r\n  }\r\n\r\n  private roomInConstructorPath = 'Rooms/GetRoomsInConstruction?';\r\n\r\n  private editMachineInConstructionPath = `Machines/EditMachinesInConstruction?constructionId=${this.props.constructionJSON.id}`;\r\n\r\n  private machineJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n    constructionId: number;\r\n    haveMachine: boolean\r\n  }[];\r\n\r\n  render() {\r\n    return (\r\n      <div className='construction'>\r\n        <div className='construction__head'>\r\n          <div className='construction__label'>\r\n            <Button ClickHandler={this.GetRoomsInConstruction.bind(this)} name='V' />\r\n          </div>\r\n          <div className='construction__header'>\r\n            <div className='construction__add-room'>\r\n              <Button name='+' ClickHandler={this.AddRoomInConstruction.bind(this)} />\r\n            </div>\r\n            <FormOneSubmit name={this.props.constructionJSON.name}\r\n              EventGetData={this.GetMachineInConstruction.bind(this)}></FormOneSubmit>\r\n          </div>\r\n        </div>\r\n        <div className={'construction__content ' + (this.state.showContent ? '' : 'construction__content-hide')}>\r\n          <div className='construction__list'>\r\n            {this.state.roomJSONArr.map((roomJSON, item) =>\r\n              <div className='construction__content-item'>\r\n                <div className='construction__edit-room'>\r\n                  <Button dataSetRoom={`${item}`} name='/' ClickHandler={this.EditRoom.bind(this)}></Button>\r\n                </div>\r\n                <div className='construction__delete-room'>\r\n                  <form onSubmit={this.DeleteRoomInConstruction.bind(this)}>\r\n                    <input type=\"hidden\" value={`${roomJSON.id}`} name='roomId' />\r\n                    <input type=\"hidden\" value={`${this.props.constructionJSON.id}`} name='constructionId' />\r\n                    <Submit name='X' />\r\n                  </form>\r\n                </div>\r\n                <Indicate indicate={roomJSON.haveMachine} />\r\n                <Room roomJSON={roomJSON}></Room>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private EditRoom(ev: React.MouseEvent) {\r\n    const item = (ev.currentTarget as HTMLElement).dataset.roomItem;\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_HEADER_NAME',\r\n      payload: `Редактировать комнату в здании \"${this.props.constructionJSON.name}\"`\r\n    });\r\n    \r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_SUBMIT_NAME',\r\n      payload: `Изменить`\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_ROOM_JSON',\r\n      payload: this.state.roomJSONArr[Number(item)]\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_CALLBACK',\r\n      payload: this.SetRoomJSONArr.bind(this)\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: true\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_PATH',\r\n      payload: 'Rooms/EditRoomInConstruction'\r\n    });\r\n  }\r\n\r\n  private async GetRoomsInConstruction(ev: React.FormEvent): Promise<void> {\r\n    if (!this.state.showContent) {\r\n      this.GetRooms();\r\n    }\r\n    this.setState({ showContent: !this.state.showContent });\r\n  }\r\n\r\n  private async GetRooms() {\r\n    const response = await fetch(this.roomInConstructorPath + `constructionId=${this.props.constructionJSON.id}`, {\r\n      method: 'POST',\r\n    });\r\n\r\n    let JSONArr = await response.json();\r\n    this.setState({ roomJSONArr: JSONArr });\r\n  }\r\n\r\n  private async GetMachineInConstruction(formData: FormData): Promise<void> {\r\n    const response = await fetch('Machines/GetMachinesInConstruction?constructionId=' + this.props.constructionJSON.id, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    this.machineJSONArr = await response.json();\r\n\r\n    store.dispatch({\r\n      type: \"SET_STATE\",\r\n      state: {\r\n        machineJSONArr: this.machineJSONArr\r\n      }\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_EDIT_PATH',\r\n      payload: this.editMachineInConstructionPath\r\n    });\r\n\r\n    storeDeleteMachinePath.dispatch({\r\n      type: 'SET_DELETE_PATH',\r\n      payload: `Machines/DeleteMachineInConstruction?constructionId=${this.props.constructionJSON.id}`\r\n    });\r\n\r\n    storeConstructionIdUpdate.dispatch({\r\n      type: 'SET_CONSTRUCTION_ID',\r\n      payload: this.props.constructionJSON.id\r\n    });\r\n  }\r\n\r\n  private UpdateRoomInConstruction() {\r\n    const constructionId = storeConstructionIdUpdate.getState().constructionId;\r\n    if (constructionId === this.props.constructionJSON.id) {\r\n      this.GetRooms();\r\n    }\r\n  }\r\n\r\n  private AddRoomInConstruction() {\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_HEADER_NAME',\r\n      payload: `Добавить комнату в здание \"${this.props.constructionJSON.name}\"`\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_SUBMIT_NAME',\r\n      payload: `Добавить комнату`\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_ROOM_JSON',\r\n      payload: {\r\n        id: 0,\r\n        name: '',\r\n        floor: null,\r\n        haveMachine: false,\r\n        constructionId: this.props.constructionJSON.id,\r\n      }\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_CALLBACK',\r\n      payload: this.SetRoomJSONArr.bind(this)\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: true\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_PATH',\r\n      payload: 'Rooms/AddRoomInConstruction'\r\n    });\r\n  }\r\n\r\n  private SetRoomJSONArr(JSONArr: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  }[]) {\r\n    this.setState({ roomJSONArr: JSONArr });\r\n  }\r\n\r\n  private async DeleteRoomInConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    let formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    const response = await fetch('Rooms/DeleteRoomInConstruction', {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    let JSONArr = await response.json();\r\n    this.setState({ roomJSONArr: JSONArr });\r\n  }\r\n\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/AddEditConstruction/AddEditConstruction';\r\n\r\nconst storeAddEditConstruction = createStore(reducer);\r\n\r\nstoreAddEditConstruction.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: {\r\n    constructionJSON: {\r\n      id: 0,\r\n      name: '',\r\n      address: ''\r\n    },\r\n    // UpdateCallback: null,\r\n    visible: false,\r\n    headerName: '',\r\n    submitName: '',\r\n    path: '',\r\n    editPath: ''\r\n  }\r\n});\r\n\r\nexport default storeAddEditConstruction;","import { setConstructionJSON, setState, \r\n  // setCallback, \r\n  setVisible, setHeaderName, setSubmitName, setPath, setEditPath } from '../../actions/AddEditConstruction/AddEditConstruction';\r\n\r\ntype ActionTypes = ReturnType<typeof setConstructionJSON>\r\n  | ReturnType<typeof setState>\r\n  | ReturnType<typeof setVisible>\r\n  // | ReturnType<typeof setCallback>\r\n  | ReturnType<typeof setHeaderName>\r\n  | ReturnType<typeof setPath>\r\n  | ReturnType<typeof setSubmitName>\r\n  | ReturnType<typeof setEditPath>;\r\n\r\nexport let reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return action.payload\r\n    case \"SET_VISIBLE\":\r\n      return { ...state, visible: action.payload }\r\n    case \"SET_CONSTRUCTION_JSON\":\r\n      return { ...state, constructionJSON: action.payload }\r\n    case 'SET_HEADER_NAME':\r\n      return { ...state, headerName: action.payload }\r\n    case 'SET_SUBMIT_NAME':\r\n      return { ...state, submitName: action.payload }\r\n    case 'SET_PATH':\r\n      return { ...state, path: action.payload }\r\n    case 'SET_EDIT_PATH':\r\n      return { ...state, editPath: action.payload }\r\n  }\r\n}","import { createStore } from 'redux';\r\nimport { reducer } from '../../reducers/ConstructionJSONArr/ConstructionJSONArr';\r\n\r\nconst storeConstructionJSONArr = createStore(reducer);\r\n\r\nstoreConstructionJSONArr.dispatch({\r\n  type: \"SET_STATE\",\r\n  payload: null\r\n});\r\n\r\nexport default storeConstructionJSONArr;","import { setConstructionJSONArr, setState } from '../../actions/ConstructionJSONArr/ConstructionJSONArr';\r\n\r\ntype ActionTypes = ReturnType<typeof setConstructionJSONArr> | ReturnType<typeof setState>;\r\n\r\nexport const reducer = function (state: any, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"SET_STATE\":\r\n      return action.payload;\r\n    case \"SET_CONSTRUCTION_JSON\":\r\n      return { ...state, constructionJSONArr: action.payload }\r\n  }\r\n}","import React from 'react';\nimport './Hierarchy.scss';\nimport Construction from './Construction';\nimport Button from './Button/Button';\nimport Submit from './Submit';\nimport storeAddEditConstruction from '../store/store/AddEditConstruction/AddEditConstruction';\nimport storeConstructionJSONArr from '../store/store/ConstructionJSONArr/ConstructionJSONArr';\nimport Indicate from './Indicate/Indicate';\n\ninterface IHierarchyState {\n  visibleButton: boolean;\n  constructionJSONArr: {\n    id: number;\n    name: string;\n    address: string;\n    haveMachine: boolean;\n  }[];\n}\n\nexport default class Hierarchy extends React.Component<{}, IHierarchyState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      visibleButton: true,\n      constructionJSONArr: []\n    }\n    this.Init();\n    storeConstructionJSONArr.subscribe(() => {\n      this.setState({\n        constructionJSONArr: storeConstructionJSONArr.getState().constructionJSONArr\n      });\n    });\n  }\n\n  private constructionPath = 'Constructions/GetConstructions?';\n\n  render() {\n    return (\n      <div className=\"hierarchy\" style={{ width: '150px', minWidth: '150px' }}>\n        <div className=\"hierarchy__content\">\n          <Button name='Добавить здание' ClickHandler={this.AddConstruction.bind(this)} />\n          {this.state.constructionJSONArr && this.state.constructionJSONArr.map((constructionJSON, item) =>\n            <div className='hierarchy__content-item'>\n              <div className='hierarchy__edit-construction'>\n                <Button dataSetConstruction={`${item}`} name='/' ClickHandler={this.EditConstruction.bind(this)}>/</Button>\n              </div>\n              <div className='hierarchy__delete-construction'>\n                <form onSubmit={this.DeleteConstruction.bind(this)}>\n                  <input type=\"hidden\" value={`${constructionJSON.id}`} name='constructionId' />\n                  <Submit name='X' />\n                </form>\n              </div>\n              <Indicate indicate={constructionJSON.haveMachine} />\n              <Construction constructionJSON={constructionJSON} />\n            </div>\n          )\n          }\n        </div>\n        <div className=\"hierarchy__border-move\" style={{ left: '148px' }}\n          onMouseDown={this.AddEventMouseMove.bind(this)}\n          onTouchStart={this.AddEventTouchMove.bind(this)}>\n          <div className=\"hierarchy__border-move-handle\"></div>\n        </div>\n      </div >\n    );\n  }\n\n  private EditConstruction(ev: React.MouseEvent) {\n    const item = (ev.currentTarget as HTMLElement).dataset.constructionItem;\n    \n    storeAddEditConstruction.dispatch({\n      type: 'SET_CONSTRUCTION_JSON',\n      payload: this.state.constructionJSONArr[Number(item)]\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_VISIBLE',\n      payload: true\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_PATH',\n      payload: 'Constructions/EditConstruction'\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_HEADER_NAME',\n      payload: `Редактировать здание \"${this.state.constructionJSONArr[Number(item)].name}\"`\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_SUBMIT_NAME',\n      payload: 'Изменить'\n    });\n  }\n\n  private Init() {\n    this.GetConstructions();\n  }\n\n  private AddConstruction() {\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_VISIBLE',\n      payload: true\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_PATH',\n      payload: 'Constructions/AddConstruction'\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_HEADER_NAME',\n      payload: 'Добавить здание'\n    });\n\n    storeAddEditConstruction.dispatch({\n      type: 'SET_SUBMIT_NAME',\n      payload: 'Добавить'\n    });\n  }\n\n  private async GetConstructions() {\n    const response = await fetch(this.constructionPath, {\n      method: 'POST',\n    });\n    let JSONArr = await response.json();\n    this.setState({ constructionJSONArr: JSONArr });\n  }\n\n  private async DeleteConstruction(ev: React.FormEvent) {\n    ev.preventDefault();\n    let formData = new FormData(ev.currentTarget as HTMLFormElement);\n    const response = await fetch('Constructions/DeleteConstruction', {\n      method: 'POST',\n      body: formData\n    });\n\n    let JSONArr = await response.json();\n    this.setState({ constructionJSONArr: JSONArr });\n  }\n\n  private mouseX: number;\n\n  private handleX: number;\n\n  private currentMargin: number;\n\n  private border: HTMLElement;\n\n  private MouseUpListener() {\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\n  }\n\n  private TouchCancelListener() {\n    document.removeEventListener('touchmove', this.moveTouch);\n    document.removeEventListener('touchend', this.TouchCancelListener.bind(this));\n  }\n\n  private AddEventMouseMove(event: React.MouseEvent) {\n    this.border = event.currentTarget as HTMLElement;\n    this.mouseX = event.clientX;\n    document.addEventListener('mousemove', this.mouseMoveHandler);\n    document.addEventListener('mouseup', this.MouseUpListener.bind(this));\n    this.handleX = this.border.getBoundingClientRect().left;\n  }\n\n  private MouseMoveHandler(event: MouseEvent) {\n    this.currentMargin = this.handleX - this.mouseX + event.clientX;\n    this.currentMargin -= this.border.parentElement.getBoundingClientRect().left;\n    this.MoveHandle();\n  }\n\n  private MoveHandle() {\n    if (this.currentMargin > 100) {\n      this.border.style.left = `${this.currentMargin}px`;\n      this.currentMargin += this.border.offsetWidth / 2;\n      this.border.parentElement.style.minWidth = `${this.currentMargin}px`;\n      this.border.parentElement.style.width = `${this.currentMargin}px`;\n    }\n  }\n\n  private AddEventTouchMove(event: React.TouchEvent) {\n    this.border = event.currentTarget as HTMLElement;\n    this.mouseX = event.targetTouches[0].pageX;\n    document.addEventListener(\"touchmove\", this.moveTouch);\n    document.addEventListener('touchend', this.TouchCancelListener.bind(this));\n    this.handleX = this.border.getBoundingClientRect().left;\n  }\n\n  private MoveBlockTouch(event: TouchEvent) {\n    this.currentMargin = this.handleX - this.mouseX + event.targetTouches[0].pageX;\n    this.currentMargin -= this.border.parentElement.getBoundingClientRect().left;\n    this.MoveHandle();\n  }\n\n  private mouseMoveHandler = this.MouseMoveHandler.bind(this);\n\n  private moveTouch = this.MoveBlockTouch.bind(this);\n}","export let setState = function (state: any) {\r\n  return {\r\n    type: GetLiteralInString(\"SET_STATE\"),\r\n    state\r\n  }\r\n};\r\n\r\nexport let addMachine = function (machineJSON: { id: number; name: string; createYear: number; roomId: number; }) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_MACHINE\"),\r\n    machineJSON\r\n  }\r\n};\r\n\r\nexport let deleteMachine = function (machineJSON: { id: number; name: string; createYear: number; roomId: number;}) {\r\n  return {\r\n    type: GetLiteralInString(\"DELETE_MACHINE\"),\r\n    machineJSON\r\n  }\r\n};\r\n\r\nexport let setMachineArr = function (machineJSONArr: { id: number; name: string; createYear: number; roomId: number;}[]) {\r\n  return {\r\n    type: GetLiteralInString(\"SET_MACHINEARR\"),\r\n    machineJSONArr\r\n  }\r\n};\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","import './VerticalBorder.scss';\r\n\r\nexport interface ControlObservable {\r\n  AddObserver(modelObserver: ControlObserverCoordinate): void;\r\n  DeleteObserver(modelObserver: ControlObserverCoordinate): void;\r\n  Notify(): void;\r\n}\r\n\r\nexport interface ControlObserverCoordinate {\r\n  SetCoordinatePercent(coordinate: number): void;\r\n}\r\n\r\nexport interface ControlMin {\r\n  SetMinMargin(minMargin: number): void;\r\n}\r\n\r\nexport interface ControlMax {\r\n  SetMaxMargin(maxMargin: number): void;\r\n}\r\n\r\nexport interface Borders extends ControlObservable, ControlMin, ControlMax{\r\n  SetCurrentMarginPercent(percent: number): void;\r\n  GetSetSelectValue(): number;\r\n}\r\n\r\n\r\nexport default class VerticalBorder implements Borders {\r\n\r\n  constructor(parentElement: HTMLElement) {\r\n    this.parentElement = parentElement;\r\n\r\n    this.Init();\r\n    this.minMargin = 0 - this.verticalBorder.offsetWidth / 2;\r\n    this.maxMargin = -this.verticalBorder.offsetWidth / 2 + this.parentElement.offsetWidth;\r\n  }\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private currentMargin: number;\r\n\r\n  private mouseX: number;\r\n\r\n  private handleX: number;\r\n\r\n  private minMargin: number;\r\n\r\n  private maxMargin: number;\r\n\r\n  private verticalBorder: HTMLElement;\r\n\r\n  private verticalBorderContent: HTMLElement;\r\n\r\n  private setSelectValue: number;\r\n\r\n  private observer: ControlObserverCoordinate[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddClasses();\r\n    this.AddContentHtml();\r\n    this.AddListener();\r\n  }\r\n\r\n  private Create() {\r\n    this.verticalBorder = document.createElement('div');\r\n    this.verticalBorderContent = document.createElement('div');\r\n  }\r\n\r\n  private AddClasses() {\r\n    this.verticalBorder.classList.add('vertical-border');\r\n    this.verticalBorderContent.classList.add('vertical-border__content');\r\n  }\r\n\r\n  private AddContentHtml() {\r\n    this.verticalBorder.appendChild(this.verticalBorderContent);\r\n    this.parentElement.appendChild(this.verticalBorder);\r\n  }\r\n\r\n  private AddListener() {\r\n    this.verticalBorder.addEventListener('mousedown', this.AddEventMouseMove.bind(this));\r\n    this.verticalBorder.addEventListener(\"touchstart\", this.AddEventTouchMove.bind(this));\r\n    document.addEventListener('mouseup', this.MouseUpListener.bind(this));\r\n  }\r\n\r\n  private MouseUpListener() {\r\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\r\n  }\r\n\r\n  private TouchCancelListener() {\r\n    document.removeEventListener('touchmove', this.moveTouch);\r\n    document.removeEventListener('touchend', this.TouchCancelListener.bind(this));\r\n  }\r\n\r\n  private AddEventMouseMove(event: MouseEvent) {\r\n    this.verticalBorder.classList.add(\"slider-foreground\");\r\n    this.mouseX = event.clientX;\r\n    document.addEventListener('mousemove', this.mouseMoveHandler);\r\n    this.handleX = this.verticalBorder.getBoundingClientRect().left;\r\n  }\r\n\r\n  private MouseMoveHandler(event: MouseEvent) {\r\n    this.currentMargin = this.handleX - this.mouseX + event.clientX;\r\n    this.currentMargin -= this.parentElement.getBoundingClientRect().left;\r\n    this.MoveHandle();\r\n  }\r\n\r\n  private MoveHandle() {\r\n    if (this.currentMargin >= this.minMargin && this.currentMargin <= this.maxMargin) {\r\n      this.verticalBorder.style.left = `${this.currentMargin}px`;\r\n      this.setSelectValue = (this.currentMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n    } else {\r\n      if (this.currentMargin < this.minMargin) {\r\n        this.verticalBorder.style.left = `${this.minMargin}px`;\r\n        this.setSelectValue = (this.minMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n      } else {\r\n        this.verticalBorder.style.left = `${this.maxMargin}px`;\r\n        this.setSelectValue = (this.maxMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n      }\r\n    }\r\n    this.Notify();\r\n  }\r\n\r\n  private AddEventTouchMove(event: TouchEvent) {\r\n    this.mouseX = event.targetTouches[0].pageX;\r\n    document.addEventListener(\"touchmove\", this.moveTouch);\r\n    document.addEventListener('touchend', this.TouchCancelListener.bind(this));\r\n    this.handleX = this.verticalBorder.getBoundingClientRect().left;\r\n  }\r\n\r\n  private MoveBlockTouch(event: TouchEvent) {\r\n    this.currentMargin = this.handleX - this.mouseX + event.targetTouches[0].pageX;\r\n    this.currentMargin -= this.parentElement.getBoundingClientRect().left;\r\n    this.MoveHandle();\r\n  }\r\n\r\n  private mouseMoveHandler = this.MouseMoveHandler.bind(this);\r\n\r\n  private moveTouch = this.MoveBlockTouch.bind(this);\r\n\r\n  SetCurrentMarginPercent(percent: number) {\r\n    if (percent <= 1 && percent >= 0) {\r\n      this.currentMargin = this.parentElement.offsetWidth * percent - this.verticalBorder.offsetWidth / 2;\r\n\r\n      if (this.currentMargin >= this.minMargin && this.currentMargin <= this.maxMargin) {\r\n        this.setSelectValue = percent;\r\n        this.verticalBorder.style.left = `${this.currentMargin}px`;\r\n        this.Notify();\r\n      }\r\n    }\r\n  }\r\n\r\n  SetMinMargin(minMargin: number) {\r\n    if (minMargin <= 1 && minMargin >= 0) {\r\n      this.minMargin = this.parentElement.offsetWidth * minMargin - this.verticalBorder.offsetWidth / 2;\r\n    }\r\n    this.verticalBorder.classList.remove(\"slider-foreground\");\r\n  }\r\n\r\n  SetMaxMargin(maxMargin: number) {\r\n    if (maxMargin <= 1 && maxMargin >= 0) {\r\n      this.maxMargin = this.parentElement.offsetWidth * maxMargin - this.verticalBorder.offsetWidth / 2;\r\n    }\r\n    this.verticalBorder.classList.remove(\"slider-foreground\");\r\n  }\r\n\r\n  AddObserver(controlObserver: ControlObserverCoordinate) {\r\n    this.observer.push(controlObserver);\r\n  }\r\n\r\n  DeleteObserver(controlObserver: ControlObserverCoordinate) {\r\n    const index = this.observer.indexOf(controlObserver);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  Notify() {\r\n    if (this.observer !== null || this.observer !== undefined) {\r\n      this.observer.forEach(el => {\r\n        el.SetCoordinatePercent(this.setSelectValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  GetSetSelectValue(): number {\r\n    return this.setSelectValue;\r\n  }\r\n\r\n}\r\n","import './Column.scss';\r\n\r\nexport interface LeftWidth {\r\n  ChangeWidthLeft(coordinatePercent: number): void;\r\n}\r\n\r\nexport interface RightWidth {\r\n  ChangeWidthRight(coordinatePercent: number): void;\r\n}\r\n\r\nexport interface Columns extends LeftWidth, RightWidth {\r\n  AddContent(elementHTML: HTMLElement): void;\r\n  DeleteContent(): void;\r\n}\r\n\r\nexport default class Column implements Columns, RightWidth, LeftWidth {\r\n\r\n  constructor(parentElement: HTMLElement, name = '') {\r\n    this.parentElement = parentElement;\r\n    this.name = name;\r\n    this.Init();\r\n  }\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private column: HTMLElement;\r\n\r\n  private coordinate: number;\r\n\r\n  private changeWidth: number;\r\n\r\n  private left: number;\r\n\r\n  private changeLeft: number;\r\n\r\n  private name: string;\r\n\r\n  Init() {\r\n    this.CreateElements();\r\n    this.AddClasses();\r\n    this.AddContentHTML();\r\n  }\r\n\r\n  private CreateElements() {\r\n    this.column = document.createElement('div');\r\n  }\r\n\r\n  private AddClasses() {\r\n    this.column.classList.add('column');\r\n  }\r\n\r\n  private AddContentHTML() {\r\n    this.parentElement.appendChild(this.column);\r\n  }\r\n\r\n  private HeightParentElement(){\r\n    this.parentElement.style.height = `${this.column.offsetHeight}px`;\r\n  }\r\n\r\n  ChangeWidthLeft(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.left = this.parentElement.offsetWidth * coordinatePercent;\r\n      this.changeLeft = this.column.getBoundingClientRect().left - this.parentElement.getBoundingClientRect().left - this.left;\r\n      this.column.style.left = `${this.left}px`;\r\n      this.column.style.width = `${this.column.offsetWidth + this.changeLeft}px`;\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  ChangeWidthRight(coordinatePercent: number) {\r\n    if (coordinatePercent >= 0 && coordinatePercent <= 1) {\r\n      this.coordinate = this.parentElement.offsetWidth * coordinatePercent + this.parentElement.getBoundingClientRect().left;\r\n      this.changeWidth = this.coordinate - this.column.getBoundingClientRect().left - this.column.offsetWidth;\r\n      this.column.style.width = `${this.column.offsetWidth + this.changeWidth}px`;\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  AddContent(elementHTML: HTMLElement) {\r\n    this.column.appendChild(elementHTML);\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  DeleteContent() {\r\n    while (this.column.childNodes.length > 1) {\r\n      const child = this.column.lastChild;\r\n      this.column.removeChild(child)\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n}","import { LineContent, LinesChange } from './Line';\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\n\r\n\r\nexport default class LineControl implements LinesChange {\r\n  constructor(lineArr: LineContent[], verticalBorderArr: ControlObservable[]) {\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.lineArr = lineArr;\r\n    this.Init();\r\n  }\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private lineArr: LineContent[];\r\n\r\n  private addLineArr: LineContent[];\r\n\r\n  private selectLine: number;\r\n\r\n  private methodGetSelectLine: (selectLine: number) => void;\r\n\r\n  private Init() {\r\n    this.ToLinkLines(this.lineArr);\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private ToLinkLines(lineArr: LineContent[]) {\r\n    lineArr.forEach((el, ind) => {\r\n      lineArr.forEach((element, index) => {\r\n        if (ind !== index)\r\n          el.AddObserver(element);\r\n      });\r\n      el.AddObserver(this);\r\n    });\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    this.verticalBorderArr.forEach(el => {\r\n      this.lineArr.forEach(element => {\r\n        el.AddObserver(element);\r\n      });\r\n    });\r\n  }\r\n\r\n  GetElementArr(): HTMLElement[] {\r\n    let contentLine: HTMLElement[] = [];\r\n    this.lineArr.forEach(el => {\r\n      contentLine = contentLine.concat(el.GetElementArr());\r\n    });\r\n    return contentLine.slice();\r\n  }\r\n\r\n  AddLines(lineArr: LineContent[]) {\r\n    this.addLineArr = lineArr;\r\n    this.ToLinkLines(this.addLineArr);\r\n    this.ToLinkLinesAddArr();\r\n    this.Concat();\r\n  }\r\n\r\n  private ToLinkLinesAddArr() {\r\n    this.addLineArr.forEach(el => {\r\n      this.lineArr.forEach(element => {\r\n        el.AddObserver(element);\r\n      });\r\n    });\r\n  }\r\n\r\n  private Concat() {\r\n    this.lineArr.concat(this.addLineArr);\r\n  }\r\n\r\n  ChangeLine() {\r\n    this.lineArr.forEach((el, index) => {\r\n      if (el.GetSelect()) {\r\n        this.selectLine = index;\r\n      }\r\n    });\r\n      this.methodGetSelectLine(this.selectLine);\r\n  }\r\n\r\n  SetMethodGetSelectLine(methodGetSelectLine: (selectLine: number) => void) {\r\n    this.methodGetSelectLine = methodGetSelectLine;\r\n  }\r\n\r\n}","import { Lines } from './Line';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder';\r\n\r\n\r\nexport default class LineHeader implements Lines, ControlObserverCoordinate{\r\n  constructor(contentLineArr: HTMLElement[]) {\r\n    this.contentLineArr = contentLineArr;\r\n    this.Init();\r\n  }\r\n  \r\n  private heightArr: number[] = [];\r\n\r\n  private contentLineArr: HTMLElement[];\r\n\r\n  private containerContentLineArr: HTMLElement[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n  }\r\n\r\n  private Create() {\r\n    this.contentLineArr.forEach(el => {\r\n      const container = document.createElement('div');\r\n      container.classList.add('line-container-header');\r\n      container.classList.add('line-container');\r\n      container.appendChild(el);\r\n      this.containerContentLineArr.push(container);\r\n    })\r\n  }\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = 'auto';\r\n      });\r\n\r\n      this.heightArr.length = 0;\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        this.heightArr.push(el.offsetHeight);\r\n      });\r\n\r\n      this.heightArr.sort(this.Compare);\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = `${this.heightArr[this.heightArr.length - 1]}px`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private Compare(a: number, b: number) {\r\n    if (a > b) return 1;\r\n    if (a == b) return 0;\r\n    if (a < b) return -1;\r\n  }\r\n\r\n  GetElementArr(){\r\n    return this.containerContentLineArr.slice();\r\n  }\r\n}","import { ControlObserverCoordinate } from '../Control/VerticalBorder';\r\nimport './Line.scss';\r\n\r\nexport interface LineObserverSelect {\r\n  AddObserver(lineChange: LinesChange): void;\r\n  DeleteObserver(lineChange: LinesChange): void;\r\n  Notify(): void;\r\n}\r\n\r\nexport interface LinesChange {\r\n  ChangeLine(): void;\r\n}\r\n\r\nexport interface Lines {\r\n  GetElementArr(): HTMLElement[];\r\n}\r\n\r\nexport interface LineContent extends Lines, LineObserverSelect, LinesChange, ControlObserverCoordinate {\r\n  GetElementArr(): HTMLElement[];\r\n  GetSelect(): boolean;\r\n}\r\n\r\nexport default class Line implements LineContent {\r\n  constructor(contentLineArr: HTMLElement[]) {\r\n    this.contentLineArr = contentLineArr;\r\n    this.Init();\r\n  }\r\n\r\n  private heightArr: number[] = [];\r\n\r\n  private contentLineArr: HTMLElement[];\r\n\r\n  private containerContentLineArr: HTMLElement[] = [];\r\n\r\n  private linesChange: LinesChange[] = [];\r\n\r\n  private select = false;\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddListeners();\r\n  }\r\n\r\n  private Create() {\r\n    this.contentLineArr.forEach(el => {\r\n      const container = document.createElement('div');\r\n      container.classList.add('line-container');\r\n      container.appendChild(el);\r\n      this.containerContentLineArr.push(container);\r\n    })\r\n  }\r\n\r\n  private AddListeners() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('click', this.ClickContainerListener.bind(this))\r\n    });\r\n\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('mouseenter', this.SelectContainerHover.bind(this))\r\n    });\r\n\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('mouseleave', this.SelectElementHandlerOff.bind(this))\r\n    });\r\n  }\r\n\r\n  private ClickContainerListener() {\r\n    this.SelectElement();\r\n    this.select = true;\r\n    this.Notify();\r\n  }\r\n\r\n  private SelectElement() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.classList.add('line-container-select');\r\n      el.classList.remove('line-container-hover');\r\n    });\r\n  }\r\n\r\n  private SelectElementHandlerOff() {\r\n    if (!this.select) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.classList.remove('line-container-hover');\r\n      });\r\n    }\r\n  }\r\n\r\n  private SelectContainerHover() {\r\n    if (!this.select)\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.classList.add('line-container-hover');\r\n      });\r\n  }\r\n\r\n  private SelectElementOff() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.classList.remove('line-container-select');\r\n    });\r\n  }\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = 'auto';\r\n      });\r\n\r\n      this.heightArr.length = 0;\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        this.heightArr.push(el.offsetHeight);\r\n      });\r\n\r\n      this.heightArr.sort(this.Compare);\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = `${this.heightArr[this.heightArr.length - 1]}px`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private Compare(a: number, b: number) {\r\n    if (a > b) return 1;\r\n    if (a == b) return 0;\r\n    if (a < b) return -1;\r\n  }\r\n\r\n\r\n\r\n  GetElementArr(): HTMLElement[] {\r\n    return this.containerContentLineArr.slice();\r\n  }\r\n\r\n  ChangeLine() {\r\n    if (this.select) {\r\n      this.SelectElementOff();\r\n    }\r\n    this.select = false;\r\n  }\r\n\r\n\r\n\r\n  AddObserver(lineChange: LinesChange) {\r\n    this.linesChange.push(lineChange);\r\n  }\r\n\r\n  DeleteObserver(lineChange: LinesChange) {\r\n    const index = this.linesChange.indexOf(lineChange);\r\n    if (index > -1) {\r\n      this.linesChange.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  Notify() {\r\n    this.linesChange.forEach(el => {\r\n      el.ChangeLine();\r\n    });\r\n  }\r\n\r\n\r\n  GetSelect(): boolean {\r\n    return this.select;\r\n  }\r\n\r\n}","import Line, { Lines, LineContent } from './Line';\r\n\r\nexport interface CreatorLineContent{\r\n  FactoryMethod(count: number, contentArr: HTMLElement[]): LineContent[];\r\n}\r\n\r\nexport default class CreatorLine implements CreatorLineContent{\r\n  FactoryMethod(count: number, contentArr: HTMLElement[]): LineContent[] {\r\n    const lineArr: LineContent[] = [];\r\n    let contentLineArr: HTMLElement[] = []\r\n    let num: number = contentArr.length/count;\r\n    \r\n    for (let i = 0; i < num; i++) {\r\n      contentLineArr = contentArr.splice(0, count);\r\n      const line = new Line(contentLineArr.slice());\r\n      lineArr.push(line);\r\n    }\r\n    return lineArr.slice();\r\n  }\r\n}","import { RightWidth } from './Column';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder'\r\n\r\nexport default class RightWidthMove implements ControlObserverCoordinate {\r\n  private observer: RightWidth[] = [];\r\n\r\n  AddObserver(observer: RightWidth) {\r\n    this.observer.push(observer);\r\n  }\r\n\r\n  DeleteObserver(observer: RightWidth) {\r\n    const index = this.observer.indexOf(observer);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  SetCoordinatePercent(coordinate: number) {\r\n    this.observer.forEach(el => {\r\n      el.ChangeWidthRight(coordinate);\r\n    });\r\n  }\r\n\r\n}","import { LeftWidth } from './Column';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder'\r\n\r\nexport default class LeftWidthMove implements ControlObserverCoordinate {\r\n\r\n  private observer: LeftWidth[] = [];\r\n\r\n  AddObserver(observer: LeftWidth) {\r\n    this.observer.push(observer);\r\n  }\r\n\r\n  DeleteObserver(observer: LeftWidth) {\r\n    const index = this.observer.indexOf(observer);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  SetCoordinatePercent(coordinate: number) {\r\n    this.observer.forEach(el => {\r\n      el.ChangeWidthLeft(coordinate);\r\n    });\r\n  }\r\n\r\n}","\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\nimport RightWidthMove from './RightWidth';\r\nimport LeftWidthMove from './LeftWidth';\r\nimport { Columns } from './Column';\r\n\r\nexport default class ColumnControl {\r\n  constructor(columnArr: Columns[], verticalBorderArr: ControlObservable[]) {\r\n    this.columnArr = columnArr;\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.Init();\r\n  }\r\n\r\n  private columnArr: Columns[];\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private leftWidthMoveArr: LeftWidthMove[] = [];\r\n\r\n  private rightWidthMoveArr: RightWidthMove[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddObserversMove();\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private Create() {\r\n    for (let i = 0; i < this.verticalBorderArr.length; i++) {\r\n      this.leftWidthMoveArr.push(new LeftWidthMove);\r\n      this.rightWidthMoveArr.push(new RightWidthMove);\r\n    }\r\n  }\r\n\r\n  private AddObserversMove() {\r\n    this.rightWidthMoveArr[0].AddObserver(this.columnArr[0]);\r\n    const count = this.verticalBorderArr.length - 1;\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      if (index > 0 && index < this.verticalBorderArr.length) {\r\n        this.rightWidthMoveArr[index].AddObserver(el);\r\n        this.leftWidthMoveArr[index - 1].AddObserver(el);\r\n      }\r\n    });\r\n    this.leftWidthMoveArr[count].AddObserver(this.columnArr[count + 1]);\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    const count = this.verticalBorderArr.length - 1;\r\n    this.verticalBorderArr[0].AddObserver(this.rightWidthMoveArr[0]);\r\n    this.verticalBorderArr[count].AddObserver(this.leftWidthMoveArr[count]);\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      if (index > 0 && index < this.columnArr.length - 1) {\r\n        this.verticalBorderArr[index].AddObserver(this.rightWidthMoveArr[index]);\r\n        this.verticalBorderArr[index - 1].AddObserver(this.leftWidthMoveArr[index - 1]);\r\n      }\r\n    });\r\n\r\n    // this.columnArr[0].ChangeWidthLeft(0);\r\n    this.columnArr[this.columnArr.length - 1].ChangeWidthRight(1);\r\n  }\r\n\r\n  AddContentHTMLInColumn(contentArr: HTMLElement[]) {\r\n    contentArr.forEach((el, index) => {\r\n      let count = ((index + 1) % this.columnArr.length) - 1;\r\n      if (count === -1)\r\n        count = this.columnArr.length - 1;\r\n      this.columnArr[count].AddContent(el);\r\n    });\r\n  }\r\n\r\n  DeleteContent() {\r\n    this.columnArr.forEach(el => {\r\n      el.DeleteContent();\r\n    })\r\n  }\r\n\r\n}","import Column from './Column';\r\nimport LineControl from './LineFacade';\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\nimport LineHeader from './LineHeader';\r\nimport { LineContent } from './Line';\r\nimport CreatorLine from './CreatorLine';\r\nimport ColumnControl from './ColumnFacade';\r\n\r\nexport default class ColumnLineFacade {\r\n  constructor(\r\n    verticalBorderArr: ControlObservable[],\r\n    contentArr: HTMLElement[],\r\n    parentElement: HTMLElement\r\n  ) {\r\n    this.parentElement = parentElement;\r\n    this.contentArr = contentArr;\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.Init();\r\n  }\r\n\r\n  private contentArr: HTMLElement[];\r\n\r\n  private columnArr: Column[] = [];\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private lineHeader: LineHeader;\r\n\r\n  private lineArr: LineContent[] = [];\r\n\r\n  private contentLineArr: HTMLElement[] = [];\r\n\r\n  private lineFacade: LineControl;\r\n\r\n  private columnControl: ColumnControl;\r\n\r\n  private count: number;\r\n\r\n  private methodSelectLine: (selectLine: number) => void;\r\n\r\n  private Init() {\r\n    this.count = this.verticalBorderArr.length + 1;\r\n    this.CreateColumn();\r\n    this.CreateLines();\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private CreateColumn() {\r\n    for (let i = 0; i < this.count; i++) {\r\n      const column = new Column(this.parentElement);\r\n      this.columnArr.push(column);\r\n    }\r\n  }\r\n\r\n  private CreateLines() {\r\n    const contentLineArr = this.contentArr.splice(0, this.count);\r\n    this.lineHeader = new LineHeader(contentLineArr.slice());\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      el.AddContent(this.lineHeader.GetElementArr()[index]);\r\n    });\r\n\r\n    const creatorLine = new CreatorLine();\r\n    this.lineArr = creatorLine.FactoryMethod(this.count, this.contentArr.slice())\r\n\r\n    this.lineFacade = new LineControl(this.lineArr.slice(), this.verticalBorderArr.slice());\r\n    this.contentLineArr = this.lineFacade.GetElementArr();\r\n    this.columnControl = new ColumnControl(this.columnArr.slice(), this.verticalBorderArr.slice());\r\n    this.columnControl.AddContentHTMLInColumn(this.contentLineArr);\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    this.verticalBorderArr.forEach(el => {\r\n      el.AddObserver(this.lineHeader);\r\n    })\r\n  }\r\n\r\n  UpdatePosition() {\r\n    this.columnArr[this.columnArr.length - 1].ChangeWidthRight(1);\r\n  }\r\n\r\n  NewContent(contentArr: HTMLElement[]) {\r\n    this.columnControl.DeleteContent();\r\n    this.contentArr = contentArr;\r\n\r\n    const creatorLine = new CreatorLine();\r\n    this.lineArr = creatorLine.FactoryMethod(this.count, this.contentArr.slice());\r\n\r\n    this.lineFacade = new LineControl(this.lineArr.slice(), this.verticalBorderArr.slice());\r\n    this.lineFacade.SetMethodGetSelectLine(this.methodSelectLine);\r\n    this.contentLineArr = this.lineFacade.GetElementArr();\r\n\r\n    this.columnControl.AddContentHTMLInColumn(this.contentLineArr.slice());\r\n  }\r\n\r\n  SetMethodGetSelectLine(methodGetSelectLine: (selectLine: number) => void) {\r\n    this.methodSelectLine = methodGetSelectLine;\r\n    this.lineFacade.SetMethodGetSelectLine(methodGetSelectLine);\r\n  }\r\n\r\n}","import { ControlObserverCoordinate, ControlMax } from './VerticalBorder';\r\n\r\n\r\nexport default class MaxMargin implements ControlObserverCoordinate {\r\n  constructor(maxValue: ControlMax[] = null) {\r\n    this.maxValue = maxValue;\r\n  }\r\n\r\n  private maxValue: ControlMax[];\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (this.maxValue !== null) {\r\n      this.maxValue.forEach((el) => {\r\n        el.SetMaxMargin(coordinatePercent);\r\n      });\r\n    }\r\n  }\r\n\r\n  AddMaxMarginObserver(maxValue: ControlMax){\r\n    this.maxValue.push(maxValue);\r\n  }\r\n\r\n  DeleteMaxMarginObserver(maxValue: ControlMax){\r\n    const index = this.maxValue.indexOf(maxValue);\r\n    if (index > -1) {\r\n      this.maxValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // for tests\r\n\r\n  GetObserver(): ControlMax[] {\r\n    return this.maxValue.slice();\r\n  }\r\n\r\n}","import { ControlMin, ControlObserverCoordinate } from './VerticalBorder';\r\n\r\n\r\nexport default class MinMargin implements ControlObserverCoordinate {\r\n  constructor(minValue: ControlMin[] = null) {\r\n    this.minValue = minValue;\r\n  }\r\n\r\n  private minValue: ControlMin[];\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (this.minValue !== null) {\r\n      this.minValue.forEach((el) => {\r\n        el.SetMinMargin(coordinatePercent);\r\n      });\r\n    }\r\n  }\r\n\r\n  AddMinMarginObserver(minValue: ControlMin) {\r\n    this.minValue.push(minValue);\r\n  }\r\n\r\n  DeleteMinMarginObserver(minValue: ControlMin) {\r\n    const index = this.minValue.indexOf(minValue);\r\n    if (index > -1) {\r\n      this.minValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // for tests\r\n\r\n  GetObserver(): ControlMin[] {\r\n    return this.minValue.slice();\r\n  }\r\n  \r\n}\r\n","import { ControlObservable, Borders } from './VerticalBorder';\r\nimport MaxMargin from './MaxMargin';\r\nimport MinMargin from './MinMargin';\r\n\r\nexport default class BordersControl {\r\n  constructor(bordersArr: Borders[]) {\r\n    this.bordersArr = bordersArr;\r\n    this.Init();\r\n  }\r\n\r\n  private bordersArr: Borders[];\r\n\r\n  private Init() {\r\n    this.bordersArr.forEach((el, index) => {\r\n      if (index < this.bordersArr.length - 1) {\r\n        const maxMargin = new MaxMargin([el]);\r\n        const nextElement = this.bordersArr[index + 1]\r\n        nextElement.AddObserver(maxMargin);\r\n        const minMargin = new MinMargin([nextElement])\r\n        el.AddObserver(minMargin);\r\n      }\r\n    });\r\n  }\r\n\r\n  GetVerticalBorderArr(): ControlObservable[] {\r\n    return this.bordersArr.slice();\r\n  }\r\n\r\n  SetDefaultPosition() {\r\n    const middleWidth = 1 / (this.bordersArr.length + 1);\r\n    this.bordersArr.forEach((el, index) => {\r\n      el.SetCurrentMarginPercent(middleWidth * (index + 1));\r\n    });\r\n  }\r\n\r\n  UpdatePosition() {\r\n    this.bordersArr[this.bordersArr.length-1].SetMaxMargin(1);\r\n    this.bordersArr.forEach(el => {\r\n      const setSelectValue = el.GetSetSelectValue();\r\n      el.SetCurrentMarginPercent(setSelectValue);\r\n    });\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './Table.scss';\r\nimport VerticalBorder from './Control/VerticalBorder';\r\nimport ColumnLineFacade from './View/ColumnLineFacade';\r\nimport BordersControl from './Control/BordersFacade';\r\nimport store from './../../store/store';\r\n\r\ninterface ITableProps {\r\n  machineJSONArr?: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }[];\r\n  GetMachineJSON?: (machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }) => void;\r\n}\r\n\r\nexport default class Table extends Component<ITableProps> {\r\n  render() {\r\n    return (\r\n      <div className='table' ref='table'></div>\r\n    );\r\n  }\r\n\r\n\r\n  // private machineJSONArr?: {\r\n  //   id: number;\r\n  //   name: string;\r\n  //   createYear: number;\r\n  // }[];\r\n\r\n  private contentLineArr: HTMLElement[] = [];\r\n\r\n  private header: HTMLElement[] = [];\r\n\r\n  private names = [\r\n    'Id',\r\n    'Name',\r\n    'Create Year',\r\n  ];\r\n\r\n  private columnCount = 3;\r\n\r\n  selectLine: number;\r\n\r\n  private currentElement: HTMLElement;\r\n\r\n  private verticalBorderArr: VerticalBorder[] = [];\r\n\r\n  private size: number;\r\n\r\n  private bordersControl: BordersControl;\r\n\r\n  private columnLineFacade: ColumnLineFacade;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.CreateHeader();\r\n    this.CreateLineArr(this.props.machineJSONArr);\r\n    store.subscribe(this.ChangeContent.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.currentElement = this.refs.table as HTMLElement;\r\n    this.Init(this.contentLineArr);\r\n  }\r\n\r\n  private CreateHeader() {\r\n    this.names.forEach(el => {\r\n      const elHTML = document.createElement('div');\r\n      elHTML.innerText = el;\r\n      this.header.push(elHTML);\r\n    });\r\n  }\r\n\r\n  private CreateLineArr(machineJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n  }[]) {\r\n    const contentLineArr: HTMLElement[] = [];\r\n    if (machineJSONArr) {\r\n      machineJSONArr.forEach(el => {\r\n        const elId = document.createElement('div');\r\n        elId.innerText = `${el.id}`;\r\n        contentLineArr.push(elId);\r\n\r\n        const elName = document.createElement('div');\r\n        elName.innerText = el.name;\r\n        contentLineArr.push(elName);\r\n\r\n        const elYear = document.createElement('div');\r\n        elYear.innerText = `${el.createYear}`;\r\n        contentLineArr.push(elYear);\r\n      });\r\n      this.contentLineArr = contentLineArr;\r\n    }\r\n  }\r\n\r\n  private Init(cont: HTMLElement[]) {\r\n    this.Create(cont);\r\n    this.IntervalCheckSize();\r\n    // this.firstLoad = true;\r\n  }\r\n\r\n  Create(cont: HTMLElement[]) {\r\n    for (let i = 0; i < this.columnCount - 1; i++) {\r\n      this.verticalBorderArr.push(new VerticalBorder(this.currentElement));\r\n    }\r\n\r\n    cont = this.header.concat(cont);\r\n\r\n    this.bordersControl = new BordersControl(this.verticalBorderArr.slice());\r\n    this.columnLineFacade = new ColumnLineFacade(this.bordersControl.GetVerticalBorderArr(), cont.slice(), this.currentElement);\r\n    this.columnLineFacade.SetMethodGetSelectLine(this.SetSelectLine.bind(this));\r\n    this.bordersControl.SetDefaultPosition();\r\n  }\r\n\r\n  private ChangeContent() {\r\n    this.CreateLineArr(store.getState().machineJSONArr);\r\n    this.AddLines(this.contentLineArr);\r\n  }\r\n\r\n  private AddLines(contentLineArr: HTMLElement[]) {\r\n    this.currentElement = this.refs.table as HTMLElement;\r\n    if (this.currentElement) {\r\n      this.NewLines(contentLineArr);\r\n    }\r\n  }\r\n\r\n  private NewLines(contentLineArr: HTMLElement[]) {\r\n    this.columnLineFacade.NewContent(contentLineArr.slice());\r\n    this.bordersControl.UpdatePosition();\r\n    this.SetSelectLine(-1);\r\n  }\r\n\r\n  private SetSelectLine(selectLine: number): void {\r\n    this.selectLine = selectLine;\r\n    if (this.props.GetMachineJSON)\r\n      if (selectLine !== -1)\r\n        this.props.GetMachineJSON(store.getState().machineJSONArr[selectLine]);\r\n      else\r\n        this.props.GetMachineJSON(null);\r\n  }\r\n\r\n  private IntervalCheckSize() {\r\n    this.size = this.currentElement.offsetWidth;\r\n    setInterval(() => {\r\n      if (this.currentElement.offsetWidth !== this.size) {\r\n        this.bordersControl.UpdatePosition();\r\n        this.columnLineFacade.UpdatePosition();\r\n      }\r\n    }, 50);\r\n  }\r\n}","import React from 'react';\r\nimport Hierarchy from './components/Hierarchy';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"./store/actions\";\r\nimport Table from './components/table/Table';\r\nimport store from './store/store';\r\nimport './App.scss';\r\nimport Button from './components/Button/Button';\r\nimport storeAddEditMachine from './store/store/AddEditMachine/AddEditMachine';\r\nimport storeConstructionJSONArr from './store/store/ConstructionJSONArr/ConstructionJSONArr';\r\nimport storeDeleteMachinePath from './store/store/DeleteMachinePath/DeleteMachinePath';\r\nimport storeUpdate from './store/store/UpdateRoomInConstruction/UpdateRoomInConstruction';\r\n\r\ninterface IAppProps {\r\n  machineJSONArr?: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }[];\r\n}\r\n\r\nexport default class App extends React.Component<IAppProps> {\r\n\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n\r\n  private machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }\r\n\r\n  private constructionPath = 'Constructions/GetConstructions?';\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <Hierarchy />\r\n        <div className='app__table-container'>\r\n          <div className='app__table-edit-delete'>\r\n            <div className='app__edit'>\r\n              <Button name='Редактировать' ClickHandler={this.EditMachine.bind(this)} />\r\n            </div>\r\n            <div className='app__delete'>\r\n              <Button name='Удалить' ClickHandler={this.DeleteMachine.bind(this)} />\r\n            </div>\r\n          </div>\r\n          <Table machineJSONArr={this.props.machineJSONArr} GetMachineJSON={this.SetMachineJSON.bind(this)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private EditMachine() {\r\n    if (this.machineJSON) {\r\n      storeAddEditMachine.dispatch({\r\n        type: 'SET_VISIBLE',\r\n        payload: true\r\n      });\r\n\r\n      storeAddEditMachine.dispatch({\r\n        type: 'SET_MACHINE_JSON',\r\n        payload: this.machineJSON\r\n      });\r\n\r\n      storeAddEditMachine.dispatch({\r\n        type: 'SET_PATH',\r\n        payload: storeAddEditMachine.getState().editPath\r\n      });\r\n\r\n      storeAddEditMachine.dispatch({\r\n        type: 'SET_HEADER_NAME',\r\n        payload: `Редактировать оборудование`\r\n      });\r\n\r\n      storeAddEditMachine.dispatch({\r\n        type: 'SET_SUBMIT_NAME',\r\n        payload: `Готово`\r\n      });\r\n    }\r\n  }\r\n\r\n  private async DeleteMachine() {\r\n    if (this.machineJSON) {\r\n      let response = await fetch(storeDeleteMachinePath.getState().deletePath +\r\n        `&machineId=${this.machineJSON.id}`, {\r\n        method: 'POST',\r\n      });\r\n\r\n      let JSONArr = await response.json();\r\n\r\n      store.dispatch({\r\n        type: \"SET_STATE\",\r\n        state: {\r\n          machineJSONArr: JSONArr\r\n        }\r\n      });\r\n\r\n      const responseConstruction = await fetch(this.constructionPath, {\r\n        method: 'POST',\r\n      });\r\n      const ConstructionJSONArr = await responseConstruction.json();\r\n\r\n      storeConstructionJSONArr.dispatch({\r\n        type: 'SET_CONSTRUCTION_JSON',\r\n        payload: ConstructionJSONArr\r\n      });\r\n\r\n      storeUpdate.dispatch({\r\n        type: 'SET_UPDATE',\r\n        payload: true\r\n      });\r\n    }\r\n  }\r\n\r\n  private SetMachineJSON(machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }) {\r\n    this.machineJSON = machineJSON;\r\n  }\r\n\r\n};\r\n\r\nstore.dispatch({\r\n  type: \"SET_STATE\",\r\n  state: {\r\n    machineJSONArr: [{ id: 1, name: 'name', createYear: 1980 }]\r\n  }\r\n});\r\n\r\nfunction mapStateToProps(state: any) {\r\n  return {\r\n    machineJSONArr: state.get(\"machineJSONArr\")\r\n  };\r\n}\r\n\r\nconnect(mapStateToProps, actions)(Hierarchy);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Input.scss';\r\n\r\ninterface IInputProps {\r\n  text?: string;\r\n  value?: string\r\n  name: string;\r\n}\r\n\r\nexport default class Input extends React.Component<IInputProps>{\r\n  render() {\r\n    return (\r\n      <label className='input-default'>\r\n        <span>{this.props.text}</span>\r\n        <input className='input-default__field' type=\"text\" name={this.props.name}  defaultValue={this.props.value} />\r\n      </label>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './AddEditConstruction.scss';\r\nimport storeAddEditConstruction from '../../store/store/AddEditConstruction/AddEditConstruction';\r\nimport storeConstructionJSONArr from '../../store/store/ConstructionJSONArr/ConstructionJSONArr';\r\nimport Button from '../Button/Button';\r\nimport Submit from '../Submit';\r\nimport Input from '../Input/Input';\r\n\r\ninterface IAddConstructionState {\r\n  visible: boolean;\r\n  constructionJSON: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n  };\r\n}\r\n\r\nexport default class AddConstruction extends React.Component<{}, IAddConstructionState> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n    this.state = {\r\n      visible: false,\r\n      constructionJSON: storeAddEditConstruction.getState().constructionJSON\r\n    };\r\n\r\n    storeAddEditConstruction.subscribe(this.SetConstructionJSON.bind(this));\r\n  }\r\n\r\n  private visibleElement: JSX.Element;\r\n\r\n  private path: string;\r\n\r\n  private headerName: string;\r\n\r\n  private submitName: string;\r\n\r\n  render() {\r\n    this.visibleElement = this.state.visible ?\r\n      <div className='add-edit-construction'>\r\n        <div className='add-edit-construction__container'>\r\n          <div className='add-edit-construction__header'>\r\n            <span>{this.headerName}</span>\r\n            <div className='add-edit-construction__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-construction__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type='hidden' name='constructionId' value={this.state.constructionJSON ? `${this.state.constructionJSON.id}` : ''}></input>\r\n            <Input text='Введите название' name='name' value={this.state.constructionJSON ? this.state.constructionJSON.name : ''}></Input>\r\n            <Input text='Введите адрес' name='address' value={this.state.constructionJSON ? this.state.constructionJSON.address : ''}></Input>\r\n            <div>\r\n              <div className='add-edit-construction__submit-container'>\r\n                <Submit name={this.submitName} />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      : null\r\n    return (\r\n      this.visibleElement\r\n    );\r\n  }\r\n\r\n  private Close() {\r\n    storeAddEditConstruction.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n\r\n    storeAddEditConstruction.dispatch({\r\n      type: 'SET_CONSTRUCTION_JSON',\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  private SetConstructionJSON() {\r\n    this.setState({\r\n      constructionJSON: storeAddEditConstruction.getState().constructionJSON\r\n    });\r\n    this.setState({\r\n      visible: storeAddEditConstruction.getState().visible\r\n    });\r\n    this.path = storeAddEditConstruction.getState().path;\r\n    this.headerName = storeAddEditConstruction.getState().headerName;\r\n    this.submitName = storeAddEditConstruction.getState().submitName;\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    const response = await fetch(this.path, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    storeAddEditConstruction.dispatch({\r\n      type: 'SET_CONSTRUCTION_JSON',\r\n      payload: null\r\n    })\r\n\r\n    let JSONArr = await response.json();\r\n\r\n    storeConstructionJSONArr.dispatch({\r\n      type: 'SET_CONSTRUCTION_JSON',\r\n      payload: JSONArr\r\n    });\r\n\r\n    storeAddEditConstruction.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n  }\r\n\r\n}","import React from 'react';\r\nimport './AddEditRoom.scss';\r\nimport Submit from '../Submit';\r\nimport Input from '../Input/Input';\r\nimport storeAddEditRoom from '../../store/store/AddEditRoom/AddEditRoom';\r\nimport Button from '../Button/Button';\r\n\r\ninterface IAddEditRoomState {\r\n  visible: boolean;\r\n  roomJSON: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean\r\n  };\r\n}\r\n\r\nexport default class AddEditRoom extends React.Component<{}, IAddEditRoomState> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n    this.state = {\r\n      visible: false,\r\n      roomJSON: storeAddEditRoom.getState().roomJSON\r\n    };\r\n\r\n    storeAddEditRoom.subscribe(this.SetVisible.bind(this));\r\n  }\r\n\r\n  private UpdateCallback: (constructionJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n  }[]) => void;\r\n\r\n  private visibleElement: JSX.Element;\r\n\r\n  private path: string;\r\n\r\n  private headerName: string;\r\n\r\n  private submitName: string;\r\n\r\n  render() {\r\n    this.visibleElement = this.state.visible ?\r\n      <div className='add-edit-room'>\r\n        <div className='add-edit-room__container'>\r\n          <div className='add-edit-room__header'>\r\n  <span>{this.headerName}</span>\r\n            <div className='add-edit-room__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-room__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type=\"hidden\" name='roomId' value={this.state.roomJSON ? this.state.roomJSON.id : 0} />\r\n            <input type=\"hidden\" name='constructionId' value={this.state.roomJSON ? this.state.roomJSON.constructionId : 0} />\r\n            <Input text='Введите название' name='name' value={this.state.roomJSON ? this.state.roomJSON.name : ''}></Input>\r\n            <Input text='Введите этаж' name='floor' value={this.state.roomJSON ? `${this.state.roomJSON.floor}` : ''}></Input>\r\n            <Submit name={this.submitName} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      : null\r\n    return (\r\n      this.visibleElement\r\n    );\r\n  }\r\n\r\n  private SetVisible() {\r\n    this.setState({\r\n      visible: storeAddEditRoom.getState().visible,\r\n      roomJSON: storeAddEditRoom.getState().roomJSON,\r\n    });\r\n    this.UpdateCallback = storeAddEditRoom.getState().UpdateCallback;\r\n    this.path = storeAddEditRoom.getState().path;\r\n    this.headerName = storeAddEditRoom.getState().headerName;\r\n    this.submitName = storeAddEditRoom.getState().submitName;\r\n  }\r\n\r\n  private Close() {\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_ROOM_JSON',\r\n      payload: null\r\n    });\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    const response = await fetch(this.path, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_ROOM_JSON',\r\n      payload: null\r\n    });\r\n\r\n    let JSONArr = await response.json();\r\n\r\n    this.UpdateCallback(JSONArr);\r\n\r\n    storeAddEditRoom.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n  }\r\n\r\n}","import React from 'react';\r\nimport './AddEditMachine.scss';\r\nimport Input from '../Input/Input';\r\nimport Submit from '../Submit';\r\nimport storeAddEditMachine from '../../store/store/AddEditMachine/AddEditMachine';\r\nimport Button from '../Button/Button';\r\nimport store from '../../store/store';\r\nimport storeConstructionJSONArr from '../../store/store/ConstructionJSONArr/ConstructionJSONArr';\r\nimport storeUpdate from '../../store/store/UpdateRoomInConstruction/UpdateRoomInConstruction';\r\n\r\ninterface IAddEditMachineState {\r\n  visible: boolean;\r\n  machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  };\r\n}\r\n\r\nexport default class AddEditMachine extends React.Component<{}, IAddEditMachineState>  {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n    this.state = {\r\n      visible: false,\r\n      machineJSON: storeAddEditMachine.getState().machineJSON\r\n    };\r\n    storeAddEditMachine.subscribe(this.SetMachineJSON.bind(this));\r\n  }\r\n\r\n  private constructionPath = 'Constructions/GetConstructions?';\r\n\r\n  private SetMachineJSON() {\r\n    this.setState({\r\n      machineJSON: storeAddEditMachine.getState().machineJSON,\r\n      visible: storeAddEditMachine.getState().visible\r\n    });\r\n    this.path = storeAddEditMachine.getState().path;\r\n    this.headerName = storeAddEditMachine.getState().headerName;\r\n    this.submitName = storeAddEditMachine.getState().submitName;\r\n  }\r\n\r\n  private visibleElement: JSX.Element;\r\n\r\n  private path: string;\r\n\r\n  private headerName: string;\r\n\r\n  private submitName: string;\r\n\r\n  render() {\r\n    this.visibleElement = this.state.visible ?\r\n      <div className='add-edit-machine'>\r\n        <div className='add-edit-machine__container'>\r\n          <div className='add-edit-machine__header'>\r\n            <span>{this.headerName}</span>\r\n            <div className='add-edit-machine__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-machine__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type=\"hidden\" name='machineId' value={this.state.machineJSON ? this.state.machineJSON.id : 0} />\r\n            <input type=\"hidden\" name='roomId' value={this.state.machineJSON ? this.state.machineJSON.roomId : 0} />\r\n            <Input text='Введите название' name='name' value={this.state.machineJSON ? this.state.machineJSON.name : ''} />\r\n            <Input text='Введите год изготовления' name='createYear' value={this.state.machineJSON ? `${this.state.machineJSON.createYear}` : ''} />\r\n            <div>\r\n              <div className='add-edit-machine__submit-container'>\r\n                <Submit name={this.submitName} />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      : null\r\n    return (\r\n      this.visibleElement\r\n    );\r\n  }\r\n\r\n  private Close() {\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_MACHINE_JSON',\r\n      payload: {\r\n        id: 0,\r\n        name: '',\r\n        createYear: 0,\r\n        roomId: 0\r\n      },\r\n    });\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    console.warn(this.path);\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    const response = await fetch(this.path, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n    let JSONArr = await response.json();\r\n\r\n    store.dispatch({\r\n      type: \"SET_STATE\",\r\n      state: {\r\n        machineJSONArr: JSONArr\r\n      }\r\n    });\r\n\r\n    storeAddEditMachine.dispatch({\r\n      type: 'SET_VISIBLE',\r\n      payload: false\r\n    });\r\n\r\n    const responseConstruction = await fetch(this.constructionPath, {\r\n      method: 'POST',\r\n    });\r\n    const ConstructionJSONArr = await responseConstruction.json();\r\n    \r\n    storeConstructionJSONArr.dispatch({\r\n      type: 'SET_CONSTRUCTION_JSON',\r\n      payload: ConstructionJSONArr\r\n    });\r\n\r\n    storeUpdate.dispatch({\r\n      type: 'SET_UPDATE',\r\n      payload: true\r\n    });\r\n  }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport AddConstruction from './components/AddEditConstruction/AddEditConstruction';\nimport AddRoom from './components/AddEditRoom/AddEditRoom';\nimport AddEditMachine from './components/AddEditMachine/AddEditMachine';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <AddConstruction />\n      <AddRoom />\n      <AddEditMachine />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n\n\n\n"],"sourceRoot":""}