{"version":3,"sources":["components/Button/Button.tsx","store/actions/MoreRooms/MoreRooms.tsx","store/actions/AddEditRoom/AddEditRoom.tsx","store/actions/Rooms/Rooms.tsx","store/actions/AddEditConstruction/AddEditConstruction.tsx","store/actions/ConstructionJSONArr/ConstructionJSONArr.tsx","store/actions/MoreMachines/MoreMachines.tsx","store/actions/AddEditMachine/AddEditMachine.tsx","store/actions/Machines/Machines.tsx","store/actions/actions.tsx","components/Indicate/Indicate.tsx","components/ActionsPanel/ActionsPanel.tsx","components/Room.tsx","components/Construction.tsx","components/Hierarchy.tsx","components/table/Control/VerticalBorder.ts","components/table/View/Column.ts","components/table/View/LineFacade.ts","components/table/View/LineHeader.ts","components/table/View/Line.ts","components/table/View/CreatorLine.ts","components/table/View/RightWidth.ts","components/table/View/LeftWidth.ts","components/table/View/ColumnFacade.ts","components/table/View/ColumnLineFacade.ts","components/table/Control/MaxMargin.ts","components/table/Control/MinMargin.ts","components/table/Control/BordersFacade.ts","components/table/Table.tsx","App.tsx","serviceWorker.ts","store/reducers/AddEditConstruction/AddEditConstruction.tsx","store/reducers/AddEditMachine/AddEditMachine.tsx","store/reducers/AddEditRoom/AddEditRoom.tsx","store/reducers/ConstructionJSONArr/ConstructionJSONArr.tsx","store/reducers/Machines/Machines.tsx","store/reducers/Rooms/Rooms.tsx","store/reducers/MoreMachines/MoreMachines.tsx","store/reducers/MoreRooms/MoreRooms.tsx","store/reducers/MoreConstructions/MoreConstructions.tsx","store/reducers/conbineReducers.tsx","store/store.tsx","components/Submit.tsx","components/Input/Input.tsx","components/AddEditConstruction/AddEditConstruction.tsx","components/AddEditRoom/AddEditRoom.tsx","components/AddEditMachine/AddEditMachine.tsx","index.tsx"],"names":["Submit","className","this","CheckFont","onClick","props","ClickHandler","name","font","Component","deleteElementSkipTakeMoreRooms","constructionId","dispatch","getState","skipQuantityConstriction","moreRooms","slice","reserveSkipQuantityConstriction","forEach","el","console","warn","index","indexOf","splice","type","payload","setSkipQuantityMoreRooms","setVisibleAddEditRoomForm","visible","setRoomJSON","roomJSON","setAddEditRoomTemplate","roomTemplate","setRooms","rooms","addRooms","removeRoomsInStore","state","roomReducer","reserveState","getRoomsInConstruction","fetch","skipRooms","takeRooms","method","then","response","json","skip","quantity","addSkipQuantityMoreRooms","catch","error","alert","deleteRoomsInConstruction","roomId","skipTake","findSkipTakeByConstructionId","addEditRoomInConstruction","formData","Number","get","addEditRoom","path","body","getRoomsInConstructionWithCurrentMachine","i","length","id","reserveRooms","getMoreRooms","changeQuantity","skipTate","setConstructionJSON","constructionJSON","setVisibleAddEditConstructionForm","setConstructionTemplate","constructionTemplate","setConstructionJSONArr","constructionJSONArr","getConstructionJSONArr","moreConstructions","addEditConstruction","deleteConstruction","setQuantityMoreMachines","setGetMachineInRoomPathMoreMachines","setMachineJSON","machineJSON","setVisibleAddEditMachineForm","setPath","setMachineTemplate","machineTemplate","setAddEditDeletePathsInRoom","addPath","editPath","deletePath","setMachineArr","machineJSONArr","addEditMachine","delete","moreMachines","deleteMachine","getMachineInConstruction","setGetMachineInConstructionPathMoreMachines","setEditDeletePathsInConstruction","getMachineInRoom","getMoreMachines","openAddMachineForm","room","createYear","headerName","submitName","setPathEqualAddPath","openEditMachineForm","machine","setPathEqualEditPath","closeAddEditMachineForm","openAddRoomForm","construction","floor","haveMachine","openEditRoomForm","constructionName","constructions","closeAddEditRoomForm","openAddConstructionForm","openEditConstructionForm","closeAddEditConstructionForm","Indicate","style","indicate","color","ActionsPanel","AddItem","DeleteItem","EditItem","React","Room","prop","AddMachineInRoom","bind","EditRoom","DeleteRoomInConstruction","GetMachineInRoom","window","confirm","connect","bindActionCreators","Construction","showContent","AddRoomInConstruction","EditConstruction","DeleteConstruction","GetRoomsInConstruction","GetMachineInConstruction","map","item","key","MoreRooms","ev","currentTarget","innerText","setState","Hierarchy","mouseX","handleX","currentMargin","border","mouseMoveHandler","MouseMoveHandler","moveTouch","MoveBlockTouch","Init","width","minWidth","AddConstruction","MoreConstructions","left","onMouseDown","AddEventMouseMove","onTouchStart","AddEventTouchMove","GetConstructions","document","removeEventListener","TouchCancelListener","event","clientX","addEventListener","MouseUpListener","getBoundingClientRect","parentElement","MoveHandle","offsetWidth","targetTouches","pageX","VerticalBorder","minMargin","maxMargin","verticalBorder","verticalBorderContent","setSelectValue","observer","Create","AddClasses","AddContentHtml","AddListener","createElement","classList","add","appendChild","Notify","percent","remove","controlObserver","push","undefined","SetCoordinatePercent","Column","column","coordinate","changeWidth","changeLeft","CreateElements","AddContentHTML","height","offsetHeight","coordinatePercent","HeightParentElement","elementHTML","childNodes","child","lastChild","removeChild","LineControl","lineArr","verticalBorderArr","addLineArr","selectLine","methodGetSelectLine","ToLinkLines","AddObserversInVerticalBorders","ind","element","AddObserver","contentLine","concat","GetElementArr","ToLinkLinesAddArr","Concat","GetSelect","LineHeader","contentLineArr","heightArr","containerContentLineArr","container","sort","Compare","a","b","Line","linesChange","select","AddListeners","ClickContainerListener","SelectContainerHover","SelectElementHandlerOff","SelectElement","SelectElementOff","lineChange","ChangeLine","CreatorLine","count","contentArr","num","line","RightWidthMove","ChangeWidthRight","LeftWidthMove","ChangeWidthLeft","ColumnControl","columnArr","leftWidthMoveArr","rightWidthMoveArr","AddObserversMove","AddContent","DeleteContent","ColumnLineFacade","lineHeader","lineFacade","columnControl","methodSelectLine","CreateColumn","CreateLines","creatorLine","FactoryMethod","AddContentHTMLInColumn","SetMethodGetSelectLine","MaxMargin","maxValue","SetMaxMargin","MinMargin","minValue","SetMinMargin","BordersControl","bordersArr","nextElement","middleWidth","SetCurrentMarginPercent","GetSetSelectValue","Table","header","names","columnCount","currentElement","size","bordersControl","columnLineFacade","CreateHeader","CreateLineArr","machines","ChangeContent","ref","refs","table","elHTML","elId","elName","elYear","cont","IntervalCheckSize","GetVerticalBorderArr","SetSelectLine","SetDefaultPosition","AddLines","NewLines","NewContent","UpdatePosition","GetMachine","setInterval","App","EditMachine","DeleteMachine","SetMachine","MoreMachines","Boolean","location","hostname","match","reducer","address","action","appReducers","combineReducers","store","createStore","reducesApp","applyMiddleware","thunk","value","Input","text","onChange","ChangeValue","prevProps","display","Close","onSubmit","AddEditConstruction","preventDefault","FormData","AddEditRoom","AddEditMachine","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7bb2ad93.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\ninterface ISubmitProps {\r\n  name: string;\r\n  ClickHandler?: (ev: React.MouseEvent) => void;\r\n  font?: string;\r\n}\r\n\r\nexport default class Submit extends Component<ISubmitProps> {\r\n  render() {\r\n    return (\r\n      <button\r\n        className={'button-default' + this.CheckFont()}\r\n        onClick={this.props.ClickHandler}>\r\n        {this.props.name}</button>\r\n    );\r\n  }\r\n\r\n  private CheckFont() {\r\n    switch (this.props.font) {\r\n      case 'icons':\r\n        return ' font-icons18'\r\n      case 'icons24':\r\n        return ' font-icons24'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n}","import { stateType } from '../../store';\r\n\r\nexport function setSkipQuantityMoreRooms(skipQuantityConstriction: {\r\n  skip: number,\r\n  quantity: number,\r\n  constructionId: number\r\n}[]) {\r\n  return {\r\n    type: GetLiteralInString('MORE_ROOMS_SET_SKIP_QUANTITY'),\r\n    payload: skipQuantityConstriction\r\n  }\r\n}\r\n\r\nexport function addSkipQuantityMoreRooms(constructionId: number) {\r\n  return {\r\n    type: GetLiteralInString('MORE_ROOMS_ADD_SKIP_QUANTITY'),\r\n    payload: [{\r\n      skip: 0,\r\n      quantity: 10,\r\n      constructionId,\r\n    }]\r\n  }\r\n}\r\n\r\nexport function editSkipTake(skipQuantityConstriction: {\r\n  skip: number,\r\n  quantity: number,\r\n  constructionId: number\r\n}) {\r\n  return function (dispatch: any) {\r\n    console.warn('object');\r\n    deleteElementSkipTakeMoreRooms(skipQuantityConstriction.constructionId);\r\n    dispatch({\r\n      type: GetLiteralInString('MORE_ROOMS_ADD_SKIP_QUANTITY'),\r\n      payload: [{\r\n        skip: skipQuantityConstriction.skip,\r\n        quantity: skipQuantityConstriction.quantity,\r\n        constructionId: skipQuantityConstriction.constructionId,\r\n      }]\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteElementSkipTakeMoreRooms(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const skipQuantityConstriction = getState().moreRooms.skipQuantityConstriction.slice();\r\n    const reserveSkipQuantityConstriction = skipQuantityConstriction;\r\n    skipQuantityConstriction.forEach(el => {\r\n      if (el.constructionId === constructionId) {\r\n        console.warn('delete');\r\n        const index = reserveSkipQuantityConstriction.indexOf(el);\r\n        if (index > -1)\r\n          reserveSkipQuantityConstriction.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    dispatch(setSkipQuantityMoreRooms(reserveSkipQuantityConstriction));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","export const setVisibleAddEditRoomForm = function (visible: boolean) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_VISIBLE\"),\r\n    payload: visible\r\n  }\r\n};\r\n\r\nexport const setRoomJSON = function (roomJSON: {\r\n  id: number;\r\n  name: string;\r\n  floor: number;\r\n  constructionId: number;\r\n  haveMachine: boolean;\r\n}) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_ROOM_JSON\"),\r\n    payload: roomJSON\r\n  }\r\n};\r\n\r\nexport const setPath = function (path: string) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_PATH\"),\r\n    payload: path\r\n  }\r\n};\r\n\r\nexport const setAddPath = function () {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_PATH\"),\r\n    payload: 'Rooms/AddRoomInConstruction'\r\n  }\r\n};\r\n\r\nexport const setEditPathAddEditRoom = function () {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_PATH\"),\r\n    payload: 'Rooms/EditRoomInConstruction'\r\n  }\r\n};\r\n\r\nexport const setHeaderName = function (headerName: string) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_HEADER_NAME\"),\r\n    payload: headerName\r\n  }\r\n};\r\n\r\nexport const setSubmitName = function (submitName: string) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_SUBMIT_NAME\"),\r\n    payload: submitName\r\n  }\r\n};\r\n\r\nexport const setAddEditRoomTemplate = function (roomTemplate: {\r\n  visible: boolean;\r\n  roomJSON: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  };\r\n  headerName: string;\r\n  submitName: string;\r\n}) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_ROOM_SET_ROOM_TEMPLATE\"),\r\n    payload: roomTemplate\r\n  }\r\n};\r\n\r\n\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","import { stateType } from '../../store'\r\nimport {\r\n  deleteElementSkipTakeMoreRooms,\r\n  addSkipQuantityMoreRooms,\r\n  editSkipTake\r\n} from '../MoreRooms/MoreRooms';\r\nimport {\r\n  setRoomJSON,\r\n  setVisibleAddEditRoomForm\r\n} from '../AddEditRoom/AddEditRoom';\r\n\r\nexport function setRooms(rooms: {\r\n  id: number;\r\n  name: string;\r\n  floor: number;\r\n  constructionId: number;\r\n  haveMachine: boolean\r\n}[]) {\r\n  return {\r\n    type: GetLiteralInString('ROOMS_SET_ROOMS'),\r\n    payload: rooms\r\n  }\r\n}\r\n\r\nexport function addRooms(rooms: {\r\n  id: number;\r\n  name: string;\r\n  floor: number;\r\n  constructionId: number;\r\n  haveMachine: boolean\r\n}[]) {\r\n  return {\r\n    type: GetLiteralInString('ROOMS_ADD_ROOMS'),\r\n    payload: rooms\r\n  }\r\n}\r\n\r\nexport function removeRoomsInStore(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const state = getState().roomReducer.rooms.slice();\r\n    let reserveState = state.slice();\r\n    state.forEach((el) => {\r\n      if (el.constructionId === constructionId) {\r\n        const index = reserveState.indexOf(el);\r\n        if (index > -1)\r\n          reserveState.splice(index, 1);\r\n      }\r\n    })\r\n    dispatch(setRooms(reserveState));\r\n  }\r\n}\r\n\r\nexport function getRoomsInConstruction(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    return fetch(`Rooms/GetRoomsInConstruction?constructionId=${constructionId}&skip=${skipRooms}&take=${takeRooms}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        const state = getState().roomReducer.rooms.slice();\r\n        let reserveState = state.slice();\r\n        state.forEach(el => {\r\n          if (el.constructionId === constructionId) {\r\n            const index = reserveState.indexOf(el);\r\n            if (index > -1)\r\n              reserveState.splice(index, 1);\r\n          }\r\n        })\r\n        dispatch(setRooms(reserveState));\r\n        dispatch(addRooms(json));\r\n\r\n        deleteElementSkipTakeMoreRooms(constructionId)(dispatch, getState);\r\n        dispatch(addSkipQuantityMoreRooms(constructionId));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function deleteRoomsInConstruction(constructionId: number, roomId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const skipTake = findSkipTakeByConstructionId(constructionId, getState);\r\n    return fetch(\r\n      `Rooms/DeleteRoomInConstruction?constructionId=${constructionId}&roomId=${roomId}&skip=${skipTake.skip}&take=${skipTake.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        const state = getState().roomReducer.rooms.slice();\r\n        let reserveState = state.slice();\r\n        state.forEach((el) => {\r\n          if (el.constructionId === constructionId) {\r\n            const index = reserveState.indexOf(el);\r\n            if (index > -1)\r\n              reserveState.splice(index, 1);\r\n          }\r\n        })\r\n        dispatch(setRooms(reserveState));\r\n        dispatch(addRooms(json));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function addEditRoomInConstruction(formData: FormData) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setRoomJSON(null));\r\n    dispatch(setVisibleAddEditRoomForm(false));\r\n    const constructionId: number = Number(formData.get('constructionId'));\r\n    const skipTake = findSkipTakeByConstructionId(constructionId, getState);\r\n    return fetch(`${getState().addEditRoom.path}?skip=${skipTake.skip}&take=${skipTake.quantity}`, {\r\n      method: 'POST',\r\n      body: formData\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        const state = getState().roomReducer.rooms.slice();\r\n        let reserveState = state.slice();\r\n        state.forEach((el) => {\r\n          if (el.constructionId === constructionId) {\r\n            const index = reserveState.indexOf(el);\r\n            if (index > -1)\r\n              reserveState.splice(index, 1);\r\n          }\r\n        })\r\n        dispatch(setRooms(reserveState));\r\n        dispatch(addRooms(json))\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\n// Эта функция обновляет комнаты здания, в котором были изменения оборудования\r\nexport function getRoomsInConstructionWithCurrentMachine(roomId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    let constructionId: number;\r\n    const rooms = getState().roomReducer.rooms.slice();\r\n    for (let i = 0; i < rooms.length; i++) {\r\n      if (rooms[i].id === roomId) {\r\n        constructionId = rooms[i].constructionId;\r\n        break;\r\n      }\r\n    }\r\n    const skipTake = findSkipTakeByConstructionId(constructionId, getState);\r\n    return fetch(\r\n      `Rooms/GetRoomsInConstruction?constructionId=${constructionId}&skip=${skipTake.skip}&take=${skipTake.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        let reserveRooms = rooms.slice();\r\n        rooms.forEach(el => {\r\n          if (el.constructionId === constructionId) {\r\n            const index = reserveRooms.indexOf(el);\r\n            if (index > -1)\r\n              reserveRooms.splice(index, 1);\r\n          }\r\n        })\r\n        dispatch(setRooms(reserveRooms));\r\n        dispatch(addRooms(json));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nconst skipRooms = 0;\r\nconst takeRooms = 10;\r\nconst takeRoomsStep = 10;\r\n\r\nexport function getMoreRooms(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const skipTake = findSkipTakeByConstructionId(constructionId, getState);\r\n    return fetch(\r\n      `Rooms/GetRoomsInConstruction?constructionId=${constructionId}&skip=${skipTake.skip}&take=${skipTake.quantity + takeRoomsStep}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        const state = getState().roomReducer.rooms.slice();\r\n        let reserveState = state.slice();\r\n        state.forEach(el => {\r\n          if (el.constructionId === constructionId) {\r\n            const index = reserveState.indexOf(el);\r\n            if (index > -1)\r\n              reserveState.splice(index, 1);\r\n          }\r\n        })\r\n        dispatch(setRooms(reserveState));\r\n        dispatch(addRooms(json));\r\n        const changeQuantity = skipTake.quantity + takeRoomsStep;\r\n        console.warn('object');\r\n        if (json.length >= skipTake.quantity)\r\n          editSkipTake({\r\n            skip: skipRooms,\r\n            quantity: changeQuantity,\r\n            constructionId\r\n          })(dispatch);\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function findSkipTakeByConstructionId(constructionId: number, getState: () => stateType) {\r\n  const moreRooms = getState().moreRooms;\r\n  let skipTate: {\r\n    skip: number;\r\n    quantity: number;\r\n  };\r\n  for (let i = 0; i < moreRooms.skipQuantityConstriction.length; i++) {\r\n    if (moreRooms.skipQuantityConstriction[i].constructionId === constructionId) {\r\n      skipTate = moreRooms.skipQuantityConstriction[i];\r\n      break;\r\n    }\r\n  }\r\n  return skipTate ? skipTate : {\r\n    skip: skipRooms,\r\n    quantity: takeRooms,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","export const setConstructionJSON = function (constructionJSON: {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  haveMachine: boolean;\r\n}) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_CONSTRUCTION_SET_CONSTRUCTION_JSON\"),\r\n    payload: constructionJSON\r\n  }\r\n};\r\n\r\n\r\nexport const setVisibleAddEditConstructionForm = function (visible: boolean) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_CONSTRUCTION_SET_VISIBLE\"),\r\n    payload: visible\r\n  }\r\n};\r\n\r\nexport const setHeaderName = (headerName: string) => {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_CONSTRUCTION_SET_HEADER_NAME\"),\r\n    payload: headerName\r\n  }\r\n}\r\n\r\nexport const setSubmitName = (submitName: string) => {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_CONSTRUCTION_SET_SUBMIT_NAME\"),\r\n    payload: submitName\r\n  }\r\n}\r\n\r\nexport const setPath = (path: string) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_CONSTRUCTION_SET_PATH'),\r\n    payload: path\r\n  }\r\n}\r\n\r\nexport const setEditPathInPath = () => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_CONSTRUCTION_SET_PATH'),\r\n    payload: `Constructions/EditConstruction`\r\n  }\r\n}\r\n\r\nexport const setAddPathInPath = () => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_CONSTRUCTION_SET_PATH'),\r\n    payload: 'Constructions/AddConstruction'\r\n  }\r\n}\r\n\r\nexport function setConstructionTemplate(constructionTemplate: {\r\n  constructionJSON: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n    haveMachine: boolean;\r\n  },\r\n  visible: boolean,\r\n  headerName: string,\r\n  submitName: string,\r\n}) {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_CONSTRUCTION_SET_CONSTRUCTION_TEMPLATE'),\r\n    payload: constructionTemplate\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","import { stateType } from '../../store';\r\nimport { setSkipMoreConstructions } from '../MoreConstructions/MoreConstructions';\r\nimport { setConstructionJSON, setVisibleAddEditConstructionForm } from '../AddEditConstruction/AddEditConstruction';\r\n\r\nconst skipConstructions = 0;\r\nconst quantityConstructions = 10;\r\nconst quantityConstructionsStep = 10;\r\n\r\n\r\nexport const setConstructionJSONArr = function (constructionJSONArr: {\r\n  id: number\r\n  name: string\r\n  address: string\r\n  haveMachine: boolean\r\n}[]) {\r\n  return {\r\n    type: GetLiteralInString(\"CONSTRUCTION_JSON_ARR_SET_CONSTRUCTION_JSON\"),\r\n    payload: constructionJSONArr\r\n  }\r\n}\r\n\r\nexport function getConstructionJSONArr() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const moreConstructions = getState().moreConstructions;\r\n    return fetch(`Constructions/GetConstructions?skip=${moreConstructions.skip}&take=${moreConstructions.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => dispatch(setConstructionJSONArr(json)))\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function addEditConstruction(formData: FormData) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setConstructionJSON(null));\r\n    dispatch(setVisibleAddEditConstructionForm(false));\r\n    const moreConstructions = getState().moreConstructions;\r\n    return fetch(`${getState().addEditConstruction.path}?skip=${moreConstructions.skip}&take=${moreConstructions.quantity}`, {\r\n      method: 'POST',\r\n      body: formData\r\n    }).then(response => response.json())\r\n      .then(json => dispatch(setConstructionJSONArr(json)))\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function deleteConstruction(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const moreConstructions = getState().moreConstructions;\r\n    return fetch(`Constructions/DeleteConstruction?constructionId=${constructionId}&skip=${moreConstructions.skip}&take=${moreConstructions.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => dispatch(setConstructionJSONArr(json)))\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function moreConstructions() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const moreConstructions = getState().moreConstructions;\r\n    return fetch(`Constructions/GetConstructions?skip=${moreConstructions.skip}&take=${moreConstructions.quantity + quantityConstructionsStep}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        dispatch(setConstructionJSONArr(json));\r\n        if (json.length >= moreConstructions.quantity)\r\n          setSkipMoreConstructions(moreConstructions.quantity + quantityConstructionsStep);\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}\r\n","export function setQuantityMoreMachines(quantity: number) {\r\n  return {\r\n    type: GetLiteralInString('MORE_MACHINE_SET_QUANTITY'),\r\n    payload: quantity\r\n  }\r\n}\r\n\r\nexport function setSkipMoreMachines(skip: number) {\r\n  return {\r\n    type: GetLiteralInString('MORE_MACHINE_SET_SKIP'),\r\n    payload: skip\r\n  }\r\n}\r\n\r\nexport function setGetMachineInRoomPathMoreMachines(roomId: number) {\r\n  return {\r\n    type: GetLiteralInString('MORE_MACHINE_SET_PATH'),\r\n    payload: `Machines/GetMachinesInRoom?roomId=${roomId}`\r\n  }\r\n}\r\n\r\nexport function setGetMachineInConstructionPathMoreMachines(constructionId: number) {\r\n  return {\r\n    type: GetLiteralInString('MORE_MACHINE_SET_PATH'),\r\n    payload: `Machines/GetMachinesInConstruction?constructionId=${constructionId}`\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}\r\n\r\n","import { stateType } from '../../store';\r\n\r\nexport const setMachineJSON = function (machineJSON: {\r\n  id: number;\r\n  name: string;\r\n  createYear: number;\r\n  roomId: number;\r\n}) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_MACHINE_JSON\"),\r\n    payload: machineJSON\r\n  }\r\n}\r\n\r\nexport const setVisibleAddEditMachineForm = function (visible: boolean) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_VISIBLE\"),\r\n    payload: visible\r\n  }\r\n}\r\n\r\nexport const setHeaderName = (headerName: string) => {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_HEADER_NAME\"),\r\n    payload: headerName\r\n  }\r\n}\r\n\r\nexport const setSubmitName = (submitName: string) => {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_SUBMIT_NAME\"),\r\n    payload: submitName\r\n  }\r\n}\r\n\r\nexport const setPath = (path: string) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_PATH'),\r\n    payload: path\r\n  }\r\n}\r\n\r\nexport const setEditPath = (EditPath: string) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_PATH'),\r\n    payload: EditPath\r\n  }\r\n}\r\n\r\nexport const setAddPathInRoom = (roomId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_ADD_PATH'),\r\n    payload: `Machines/AddMachineInRoom?roomId=${roomId}`\r\n  }\r\n}\r\n\r\nexport const setAddPathInConstruction = (constructionId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_ADD_PATH'),\r\n    payload: `Machines/AddMachineInConstruction?constructionId=${constructionId}`\r\n  }\r\n}\r\n\r\nexport const setEditPathInRoom = (roomId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_EDIT_PATH'),\r\n    payload: `Machines/EditMachineInRoom?roomId=${roomId}`\r\n  }\r\n}\r\n\r\nexport const setEditPathInConstruction = (constructionId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_EDIT_PATH'),\r\n    payload: `Machines/EditMachineInConstruction?constructionId=${constructionId}`\r\n  }\r\n}\r\n\r\nexport const setDeletePathInRoom = (roomId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_DELETE_PATH'),\r\n    payload: `Machines/DeleteMachineInRoom?roomId=${roomId}`\r\n  }\r\n}\r\n\r\nexport const setDeletePathInConstruction = (constructionId: number) => {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_DELETE_PATH'),\r\n    payload: `Machines/DeleteMachineInConstruction?constructionId=${constructionId}`\r\n  }\r\n}\r\n\r\nexport function setPathEqualEditPath() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    return dispatch(setPath(getState().addEditMachine.editPath))\r\n  }\r\n}\r\n\r\nexport function setPathEqualAddPath() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    return dispatch(setPath(getState().addEditMachine.addPath))\r\n  }\r\n}\r\n\r\nexport function setMachineTemplate(machineTemplate: {\r\n  visible?: boolean\r\n  machineJSON?: {\r\n    id: number\r\n    name: string\r\n    createYear: number\r\n    roomId: number\r\n  }\r\n  headerName?: string\r\n  submitName?: string\r\n}) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_MACHINE_TEMPLATE\"),\r\n    payload: machineTemplate\r\n  }\r\n}\r\n\r\nexport function setAddEditDeletePathsInRoom(roomId: number) {\r\n  return {\r\n    type: GetLiteralInString(\"ADD_EDIT_MACHINE_SET_ADD_EDIT_DELETE-PATHS\"),\r\n    payload: {\r\n      addPath: `Machines/AddMachineInRoom?roomId=${roomId}`,\r\n      editPath: `Machines/EditMachineInRoom?roomId=${roomId}`,\r\n      deletePath: `Machines/DeleteMachineInRoom?roomId=${roomId}`,\r\n    }\r\n  }\r\n}\r\n\r\nexport function setEditDeletePathsInConstruction(constructionId: number) {\r\n  return {\r\n    type: GetLiteralInString('ADD_EDIT_MACHINE_SET_EDIT_DELETE_PATHS'),\r\n    payload: {\r\n      editPath: `Machines/EditMachineInConstruction?constructionId=${constructionId}`,\r\n      deletePath: `Machines/DeleteMachineInConstruction?constructionId=${constructionId}`,\r\n    }\r\n  }\r\n}\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","import { stateType } from '../../store';\r\nimport { getRoomsInConstructionWithCurrentMachine } from '../Rooms/Rooms';\r\nimport { getConstructionJSONArr } from \"../ConstructionJSONArr/ConstructionJSONArr\";\r\nimport {\r\n  setQuantityMoreMachines,\r\n  setGetMachineInConstructionPathMoreMachines,\r\n  setGetMachineInRoomPathMoreMachines\r\n} from '../MoreMachines/MoreMachines';\r\nimport {\r\n  setEditDeletePathsInConstruction,\r\n  setMachineJSON,\r\n  setVisibleAddEditMachineForm,\r\n  setAddEditDeletePathsInRoom\r\n} from '../AddEditMachine/AddEditMachine';\r\n\r\n\r\n\r\nexport let setMachineArr = function (machineJSONArr: {\r\n  id: number;\r\n  name: string;\r\n  createYear: number;\r\n  roomId: number;\r\n}[]) {\r\n  return {\r\n    type: GetLiteralInString(\"SET_MACHINE_ARR\"),\r\n    payload: machineJSONArr\r\n  }\r\n};\r\n\r\nexport function addEditMachine(formData: FormData) {\r\n  const roomId: number = Number(formData.get('roomId'))\r\n  formData.delete('roomId');\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setVisibleAddEditMachineForm(false));\r\n    dispatch(setMachineJSON(null));\r\n    return fetch(`${getState().addEditMachine.path}&skip=${getState().moreMachines.skip}&take=${getState().moreMachines.quantity}`, {\r\n      method: 'POST',\r\n      body: formData\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        dispatch(setMachineArr(json));\r\n        getConstructionJSONArr()(dispatch, getState);\r\n        getRoomsInConstructionWithCurrentMachine(roomId)(dispatch, getState);\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function deleteMachine(id: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    return fetch(`${getState().addEditMachine.deletePath}&machineId=${id}&skip=${getState().moreMachines.skip}&take=${getState().moreMachines.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        let roomId: number;\r\n        getState().machineJSONArr.machineJSONArr.forEach(el => {\r\n          if (el.id === id)\r\n            roomId = el.roomId;\r\n        })\r\n        dispatch(setMachineArr(json));\r\n        getConstructionJSONArr()(dispatch, getState);\r\n        getRoomsInConstructionWithCurrentMachine(roomId)(dispatch, getState);\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nconst takeMachine = 10;\r\nconst takeMachineStep = 10;\r\n\r\nexport function getMachineInConstruction(constructionId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setQuantityMoreMachines(takeMachine));\r\n    dispatch(setGetMachineInConstructionPathMoreMachines(constructionId));\r\n    return fetch(`Machines/GetMachinesInConstruction?constructionId=${constructionId}&skip=${getState().moreMachines.skip}&take=${getState().moreMachines.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        dispatch(setMachineArr(json));\r\n        dispatch(setEditDeletePathsInConstruction(constructionId));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function getMachineInRoom(roomId: number) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setQuantityMoreMachines(takeMachine));\r\n    dispatch(setGetMachineInRoomPathMoreMachines(roomId));\r\n    return fetch(`Machines/GetMachinesInRoom?roomId=${roomId}&skip=${getState().moreMachines.skip}&take=${getState().moreMachines.quantity}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        dispatch(setMachineArr(json));\r\n        dispatch(setAddEditDeletePathsInRoom(roomId));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nexport function getMoreMachines() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    const moreMachines = getState().moreMachines;\r\n    return fetch(`${moreMachines.path}&skip=${moreMachines.skip}&take=${moreMachines.quantity + takeMachineStep}`, {\r\n      method: 'POST',\r\n    }).then(response => response.json())\r\n      .then(json => {\r\n        dispatch(setMachineArr(json));\r\n        const changeQuantity = moreMachines.quantity + takeMachineStep;\r\n        if (json.length >= moreMachines.quantity)\r\n          dispatch(setQuantityMoreMachines(changeQuantity));\r\n      })\r\n      .catch(error => alert('Что-то пошло не так :('));\r\n  }\r\n}\r\n\r\nfunction GetLiteralInString<T extends string>(str: T): T {\r\n  return str;\r\n}","import { stateType } from '../store';\r\nimport {\r\n  setAddEditDeletePathsInRoom,\r\n  setPathEqualAddPath,\r\n  setMachineTemplate,\r\n  setPathEqualEditPath,\r\n  setMachineJSON,\r\n  setVisibleAddEditMachineForm\r\n} from './AddEditMachine/AddEditMachine';\r\nimport { setGetMachineInRoomPathMoreMachines } from './MoreMachines/MoreMachines';\r\nimport {\r\n  setAddEditRoomTemplate,\r\n  setAddPath,\r\n  setEditPathAddEditRoom,\r\n  setRoomJSON,\r\n  setVisibleAddEditRoomForm\r\n} from './AddEditRoom/AddEditRoom';\r\nimport {\r\n  setAddPathInPath,\r\n  setConstructionTemplate,\r\n  setEditPathInPath,\r\n  setConstructionJSON,\r\n  setVisibleAddEditConstructionForm\r\n} from './AddEditConstruction/AddEditConstruction';\r\n\r\nexport function openAddMachineForm(room: {\r\n  name: string,\r\n  id: number,\r\n}) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setMachineTemplate({\r\n      visible: true,\r\n      machineJSON: {\r\n        id: null,\r\n        name: null,\r\n        createYear: null,\r\n        roomId: room.id,\r\n      },\r\n      headerName: `Добавить оборудование в комнату \"${room.name}\"`,\r\n      submitName: 'Добавить оборудование',\r\n    }));\r\n    dispatch(setAddEditDeletePathsInRoom(room.id));\r\n    setPathEqualAddPath()(dispatch, getState);\r\n    dispatch(setGetMachineInRoomPathMoreMachines(room.id));\r\n  }\r\n}\r\n\r\nexport function openEditMachineForm(machine: {\r\n  id: number;\r\n  name: string;\r\n  createYear: number;\r\n  roomId: number;\r\n}) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    console.warn(machine);\r\n    dispatch(setMachineTemplate({\r\n      visible: true,\r\n      machineJSON: machine,\r\n      headerName: 'Редактировать оборудование',\r\n      submitName: 'Готово',\r\n    }));\r\n    setPathEqualEditPath()(dispatch, getState);\r\n  }\r\n}\r\n\r\nexport function closeAddEditMachineForm() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setVisibleAddEditMachineForm(false));\r\n    dispatch(setMachineJSON(null));\r\n  }\r\n}\r\n\r\nexport function openAddRoomForm(construction: {\r\n  id: number;\r\n  name: string;\r\n}) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setAddEditRoomTemplate({\r\n      visible: true,\r\n      headerName: `Добавить комнату в здание \"${construction.name}\"`,\r\n      submitName: 'Добавить комнату',\r\n      roomJSON: {\r\n        id: 0,\r\n        name: null,\r\n        floor: null,\r\n        haveMachine: false,\r\n        constructionId: construction.id,\r\n      },\r\n    }));\r\n    dispatch(setAddPath());\r\n  }\r\n}\r\n\r\nexport function openEditRoomForm(room: {\r\n  id: number;\r\n  name: string;\r\n  floor: number;\r\n  constructionId: number;\r\n  haveMachine: boolean;\r\n}) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    let constructionName: string;\r\n    const constructions = getState().constructionJSONArr.constructionJSONArr;\r\n    for (let i = 0; i < constructions.length; i++) {\r\n      if(constructions[i].id=room.constructionId){\r\n        constructionName=constructions[i].name;\r\n        break;\r\n      }\r\n    }\r\n    dispatch(setAddEditRoomTemplate({\r\n      visible: true,\r\n      headerName: `Редактировать комнату в здании \"${constructionName}\"`,\r\n      submitName: 'Изменить',\r\n      roomJSON: room,\r\n    }));\r\n    dispatch(setEditPathAddEditRoom());\r\n  }\r\n}\r\n\r\nexport function closeAddEditRoomForm() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setVisibleAddEditRoomForm(false));\r\n    dispatch(setRoomJSON(null));\r\n  }\r\n}\r\n\r\nexport function openAddConstructionForm() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setAddPathInPath());\r\n    dispatch(setConstructionTemplate({\r\n      constructionJSON: null,\r\n      visible: true,\r\n      headerName: 'Добавить здание',\r\n      submitName: 'Добавить',\r\n    }));\r\n  }\r\n}\r\n\r\nexport function openEditConstructionForm(construction: {\r\n  id: number;\r\n  name: string;\r\n  address: string;\r\n  haveMachine: boolean;\r\n}) {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setConstructionTemplate({\r\n      constructionJSON: construction,\r\n      visible: true,\r\n      headerName: `Редактировать здание \"${construction.name}\"`,\r\n      submitName: 'Изменить',\r\n    }));\r\n    dispatch(setEditPathInPath());\r\n  }\r\n}\r\n\r\nexport function closeAddEditConstructionForm() {\r\n  return function (dispatch: any, getState: () => stateType) {\r\n    dispatch(setVisibleAddEditConstructionForm(false));\r\n    dispatch(setConstructionJSON(null));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Indicate.scss';\r\n\r\n\r\ninterface IIndicateProps {\r\n  indicate: boolean;\r\n}\r\n\r\nexport default class Indicate extends Component<IIndicateProps>{\r\n  render() {\r\n    return (\r\n      <div className='indicate font-icons14' style={this.props.indicate ? { color: 'green' } : { color: 'red' }}>check_circle</div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './ActionsPanel.scss';\r\nimport Button from '../Button/Button';\r\nimport Indicate from '../Indicate/Indicate';\r\n\r\ninterface IActionsPanel {\r\n  AddItem: () => void;\r\n  EditItem: (ev: React.MouseEvent) => void;\r\n  DeleteItem: (ev: React.FormEvent) => void;\r\n  indicate: boolean;\r\n}\r\n\r\nexport class ActionsPanel extends React.Component<IActionsPanel> {\r\n  render() {\r\n    return (\r\n      <div className='actions-panel'>\r\n        <div className='actions-panel__add'>\r\n          <Button name='add' font='icons' ClickHandler={this.props.AddItem} />\r\n        </div>\r\n        <div className='actions-panel__delete-construction'>\r\n          <Button name='delete_forever' font='icons' ClickHandler={this.props.DeleteItem} />\r\n        </div>\r\n        <div className='actions-panel__edit-construction'>\r\n          <Button name='edit' font='icons' ClickHandler={this.props.EditItem} />\r\n        </div>\r\n        <Indicate indicate={this.props.indicate} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Room.scss';\r\nimport Button from './Button/Button';\r\nimport { getMachineInRoom } from '../store/actions/Machines/Machines';\r\nimport { openAddMachineForm } from '../store/actions/actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { stateType } from '../store/store';\r\nimport {\r\n  openEditRoomForm,\r\n} from '../store/actions/actions';\r\nimport {\r\n  deleteRoomsInConstruction,\r\n} from '../store/actions/Rooms/Rooms';\r\nimport { ActionsPanel } from './ActionsPanel/ActionsPanel';\r\n\r\ninterface ImapDispatchToProps {\r\n  openEditRoomForm?: (room: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  }) => (dispatch: any, getState: () => stateType) => void;\r\n  getMachineInRoom?: (roomId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  openAddMachineForm?: (room: {\r\n    name: string;\r\n    id: number;\r\n  }) => void;\r\n  deleteRoomsInConstruction?: (constructionId: number, roomId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n}\r\n\r\ninterface IRoomProps extends ImapDispatchToProps {\r\n  roomJSON: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean;\r\n  };\r\n}\r\n\r\nclass Room extends Component<IRoomProps> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='room'>\r\n        <ActionsPanel\r\n          AddItem={this.AddMachineInRoom.bind(this)}\r\n          EditItem={this.EditRoom.bind(this)}\r\n          DeleteItem={this.DeleteRoomInConstruction.bind(this)}\r\n          indicate={this.props.roomJSON.haveMachine}\r\n        />\r\n        <Button name={this.props.roomJSON.name} ClickHandler={this.GetMachineInRoom.bind(this)} />\r\n      </div >\r\n    );\r\n  }\r\n\r\n  private EditRoom() {\r\n    this.props.openEditRoomForm(this.props.roomJSON);\r\n  }\r\n\r\n  private async DeleteRoomInConstruction() {\r\n    const isDeleteRoom = window.confirm(`Вы действительно хотите удалить комнату \"${this.props.roomJSON.name}\" ?`);\r\n    if (isDeleteRoom)\r\n      this.props.deleteRoomsInConstruction(this.props.roomJSON.constructionId, this.props.roomJSON.id);\r\n  }\r\n\r\n  private async GetMachineInRoom() {\r\n    this.props.getMachineInRoom(this.props.roomJSON.id);\r\n  }\r\n\r\n  private AddMachineInRoom() {\r\n    this.props.openAddMachineForm(this.props.roomJSON);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    getMachineInRoom,\r\n    openAddMachineForm,\r\n    openEditRoomForm,\r\n    deleteRoomsInConstruction,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<{}, ImapDispatchToProps, IRoomProps, {}>(\r\n  null,\r\n  mapDispatchToProps\r\n)(Room);","import React, { Component } from 'react';\r\nimport './Construction.scss';\r\nimport Room from './Room';\r\nimport Button from './Button/Button';\r\nimport { getMachineInConstruction } from '../store/actions/Machines/Machines';\r\nimport {\r\n  openAddRoomForm,\r\n} from '../store/actions/actions';\r\nimport {\r\n  getRoomsInConstruction,\r\n  removeRoomsInStore,\r\n  getMoreRooms,\r\n} from '../store/actions/Rooms/Rooms';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { stateType } from '../store/store';\r\nimport { ActionsPanel } from './ActionsPanel/ActionsPanel';\r\nimport {\r\n  openEditConstructionForm\r\n} from '../store/actions/actions';\r\nimport {\r\n  deleteConstruction,\r\n} from \"../store/actions/ConstructionJSONArr/ConstructionJSONArr\";\r\n\r\ninterface ImapStateToProps {\r\n  rooms?: {\r\n    id: number\r\n    name: string\r\n    floor: number\r\n    constructionId: number\r\n    haveMachine: boolean\r\n  }[]\r\n\r\n}\r\n\r\ninterface ImapDispatchToProps {\r\n  getMachineInConstruction?: (constructionId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  getRoomsInConstruction?: (constructionId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  removeRoomsInStore?: (constructionId: number) => (dispatch: any, getState: () => stateType) => void;\r\n  getMoreRooms?: (constructionId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  openAddRoomForm?: (construction: {\r\n    id: number;\r\n    name: string;\r\n  }) => (dispatch: any, getState: () => stateType) => void;\r\n  openEditConstructionForm?: (construction: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n    haveMachine: boolean;\r\n  }) => (dispatch: any, getState: () => stateType) => void;\r\n  deleteConstruction?: (constructionId: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n}\r\n\r\ninterface IConstructionProps extends ImapDispatchToProps, ImapStateToProps {\r\n  constructionJSON: {\r\n    id: number\r\n    name: string\r\n    address: string\r\n    haveMachine: boolean\r\n  };\r\n}\r\n\r\ninterface IConstructionState {\r\n  showContent: boolean;\r\n}\r\n\r\nclass Construction extends Component<IConstructionProps, IConstructionState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      showContent: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='construction'>\r\n        <div className='construction__head'>\r\n          <ActionsPanel\r\n            AddItem={this.AddRoomInConstruction.bind(this)}\r\n            EditItem={this.EditConstruction.bind(this)}\r\n            DeleteItem={this.DeleteConstruction.bind(this)}\r\n            indicate={this.props.constructionJSON.haveMachine}\r\n          />\r\n          <div className='construction__more-less'>\r\n            <Button name='expand_more' font='icons24' ClickHandler={this.GetRoomsInConstruction.bind(this)} />\r\n          </div>\r\n          <Button name={this.props.constructionJSON.name}\r\n            ClickHandler={this.GetMachineInConstruction.bind(this)}\r\n          />\r\n        </div>\r\n        <div className={'construction__content ' + (this.state.showContent ? '' : 'construction__content-hide')}>\r\n          <div className='construction__list'>\r\n            {this.props.rooms && this.props.rooms.map((room, item) => {\r\n              return (room.constructionId === this.props.constructionJSON.id ?\r\n                <div key={room.id} className='construction__content-item'>\r\n                  <Room roomJSON={room}></Room>\r\n                </div>\r\n                : null\r\n              )\r\n            }\r\n            )}\r\n            <Button name='Ещё' ClickHandler={this.MoreRooms.bind(this)} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private EditConstruction() {\r\n    this.props.openEditConstructionForm(this.props.constructionJSON);\r\n  }\r\n\r\n  private async DeleteConstruction() {\r\n    const isDeleteConstruction = window.confirm(`Вы действительно хотите удалить здание \"${this.props.constructionJSON.name}\" ?`);\r\n    if (isDeleteConstruction)\r\n      this.props.deleteConstruction(this.props.constructionJSON.id);\r\n  }\r\n\r\n  private GetRoomsInConstruction(ev: React.MouseEvent) {\r\n    const el = ev.currentTarget as HTMLElement;\r\n    if (!this.state.showContent) {\r\n      this.props.getRoomsInConstruction(this.props.constructionJSON.id);\r\n      el.innerText = 'expand_less';\r\n    }\r\n    else {\r\n      this.props.removeRoomsInStore(this.props.constructionJSON.id);\r\n      el.innerText = 'expand_more';\r\n    }\r\n    this.setState({ showContent: !this.state.showContent });\r\n  }\r\n\r\n  private AddRoomInConstruction() {\r\n    this.props.openAddRoomForm(this.props.constructionJSON);\r\n  }\r\n\r\n  private MoreRooms() {\r\n    this.props.getMoreRooms(this.props.constructionJSON.id);\r\n  }\r\n\r\n  private async GetMachineInConstruction() {\r\n    this.props.getMachineInConstruction(this.props.constructionJSON.id);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state: stateType) {\r\n  return {\r\n    rooms: state.roomReducer.rooms\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    getMachineInConstruction,\r\n    getRoomsInConstruction,\r\n    removeRoomsInStore,\r\n    getMoreRooms,\r\n    openAddRoomForm,\r\n    deleteConstruction,\r\n    openEditConstructionForm,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<ImapStateToProps, ImapDispatchToProps, IConstructionProps, stateType>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Construction);","import React from 'react';\nimport './Hierarchy.scss';\nimport Construction from './Construction';\nimport Button from './Button/Button';\nimport { connect } from 'react-redux';\nimport { stateType } from '../store/store';\nimport {\n  getConstructionJSONArr,\n  moreConstructions,\n} from \"../store/actions/ConstructionJSONArr/ConstructionJSONArr\";\nimport { bindActionCreators } from 'redux';\nimport {\n  openAddConstructionForm,\n} from '../store/actions/actions';\n\n\n\ninterface IHierarchyProps extends ImapStateToProps, ImapDispatchToProps {\n}\n\ninterface ImapStateToProps {\n  constructionJSONArr?: {\n    id: number\n    name: string\n    address: string\n    haveMachine: boolean\n  }[]\n}\n\ninterface ImapDispatchToProps {\n  getConstructionJSONArr?: () => (dispatch: any, getState: () => stateType) => Promise<any>;\n  moreConstructions?: () => (dispatch: any, getState: () => stateType) => Promise<any>;\n  openAddConstructionForm?: () => (dispatch: any, getState: () => stateType) => void;\n}\n\nclass Hierarchy extends React.Component<IHierarchyProps> {\n  constructor(props: any) {\n    super(props);\n    this.Init();\n  }\n\n  render() {\n    return (\n      <div className=\"hierarchy\" style={{ width: '250px', minWidth: '250px' }}>\n        <div className=\"hierarchy__content\">\n          <Button name='Добавить здание' ClickHandler={this.AddConstruction.bind(this)} />\n          {this.props.constructionJSONArr && this.props.constructionJSONArr.map(constructionJSON =>\n            <div key={constructionJSON.id} className='hierarchy__content-item'>\n              <Construction constructionJSON={constructionJSON} />\n            </div>\n          )}\n          <Button name='Больше зданий' ClickHandler={this.MoreConstructions.bind(this)} />\n        </div>\n        <div className=\"hierarchy__border-move\" style={{ left: '248px' }}\n          onMouseDown={this.AddEventMouseMove.bind(this)}\n          onTouchStart={this.AddEventTouchMove.bind(this)}>\n          <div className=\"hierarchy__border-move-handle\"></div>\n        </div>\n      </div >\n    );\n  }\n\n  private Init() {\n    this.GetConstructions();\n  }\n\n  private AddConstruction() {\n    this.props.openAddConstructionForm();\n  }\n\n  private async GetConstructions() {\n    this.props.getConstructionJSONArr();\n  }\n\n  private MoreConstructions() {\n    this.props.moreConstructions();\n  }\n\n\n\n  private mouseX: number;\n\n  private handleX: number;\n\n  private currentMargin: number;\n\n  private border: HTMLElement;\n\n  private MouseUpListener() {\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\n  }\n\n  private TouchCancelListener() {\n    document.removeEventListener('touchmove', this.moveTouch);\n    document.removeEventListener('touchend', this.TouchCancelListener.bind(this));\n  }\n\n  private AddEventMouseMove(event: React.MouseEvent) {\n    this.border = event.currentTarget as HTMLElement;\n    this.mouseX = event.clientX;\n    document.addEventListener('mousemove', this.mouseMoveHandler);\n    document.addEventListener('mouseup', this.MouseUpListener.bind(this));\n    this.handleX = this.border.getBoundingClientRect().left;\n  }\n\n  private MouseMoveHandler(event: MouseEvent) {\n    this.currentMargin = this.handleX - this.mouseX + event.clientX;\n    this.currentMargin -= this.border.parentElement.getBoundingClientRect().left;\n    this.MoveHandle();\n  }\n\n  private MoveHandle() {\n    if (this.currentMargin > 100) {\n      this.border.style.left = `${this.currentMargin}px`;\n      this.currentMargin += this.border.offsetWidth / 2;\n      this.border.parentElement.style.minWidth = `${this.currentMargin}px`;\n      this.border.parentElement.style.width = `${this.currentMargin}px`;\n    }\n  }\n\n  private AddEventTouchMove(event: React.TouchEvent) {\n    this.border = event.currentTarget as HTMLElement;\n    this.mouseX = event.targetTouches[0].pageX;\n    document.addEventListener(\"touchmove\", this.moveTouch);\n    document.addEventListener('touchend', this.TouchCancelListener.bind(this));\n    this.handleX = this.border.getBoundingClientRect().left;\n  }\n\n  private MoveBlockTouch(event: TouchEvent) {\n    this.currentMargin = this.handleX - this.mouseX + event.targetTouches[0].pageX;\n    this.currentMargin -= this.border.parentElement.getBoundingClientRect().left;\n    this.MoveHandle();\n  }\n\n  private mouseMoveHandler = this.MouseMoveHandler.bind(this);\n\n  private moveTouch = this.MoveBlockTouch.bind(this);\n}\n\n\n\nfunction mapStateToProps(state: stateType) {\n  return {\n    constructionJSONArr: state.constructionJSONArr.constructionJSONArr\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return bindActionCreators({\n    getConstructionJSONArr,\n    openAddConstructionForm,\n    moreConstructions,\n  }, dispatch)\n}\n\nexport default connect<ImapStateToProps, ImapDispatchToProps, IHierarchyProps, stateType>(\n  mapStateToProps,\n  mapDispatchToProps\n)(Hierarchy);","import './VerticalBorder.scss';\r\n\r\nexport interface ControlObservable {\r\n  AddObserver(modelObserver: ControlObserverCoordinate): void;\r\n  DeleteObserver(modelObserver: ControlObserverCoordinate): void;\r\n  Notify(): void;\r\n}\r\n\r\nexport interface ControlObserverCoordinate {\r\n  SetCoordinatePercent(coordinate: number): void;\r\n}\r\n\r\nexport interface ControlMin {\r\n  SetMinMargin(minMargin: number): void;\r\n}\r\n\r\nexport interface ControlMax {\r\n  SetMaxMargin(maxMargin: number): void;\r\n}\r\n\r\nexport interface Borders extends ControlObservable, ControlMin, ControlMax{\r\n  SetCurrentMarginPercent(percent: number): void;\r\n  GetSetSelectValue(): number;\r\n}\r\n\r\n\r\nexport default class VerticalBorder implements Borders {\r\n\r\n  constructor(parentElement: HTMLElement) {\r\n    this.parentElement = parentElement;\r\n\r\n    this.Init();\r\n    this.minMargin = 0 - this.verticalBorder.offsetWidth / 2;\r\n    this.maxMargin = -this.verticalBorder.offsetWidth / 2 + this.parentElement.offsetWidth;\r\n  }\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private currentMargin: number;\r\n\r\n  private mouseX: number;\r\n\r\n  private handleX: number;\r\n\r\n  private minMargin: number;\r\n\r\n  private maxMargin: number;\r\n\r\n  private verticalBorder: HTMLElement;\r\n\r\n  private verticalBorderContent: HTMLElement;\r\n\r\n  private setSelectValue: number;\r\n\r\n  private observer: ControlObserverCoordinate[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddClasses();\r\n    this.AddContentHtml();\r\n    this.AddListener();\r\n  }\r\n\r\n  private Create() {\r\n    this.verticalBorder = document.createElement('div');\r\n    this.verticalBorderContent = document.createElement('div');\r\n  }\r\n\r\n  private AddClasses() {\r\n    this.verticalBorder.classList.add('vertical-border');\r\n    this.verticalBorderContent.classList.add('vertical-border__content');\r\n  }\r\n\r\n  private AddContentHtml() {\r\n    this.verticalBorder.appendChild(this.verticalBorderContent);\r\n    this.parentElement.appendChild(this.verticalBorder);\r\n  }\r\n\r\n  private AddListener() {\r\n    this.verticalBorder.addEventListener('mousedown', this.AddEventMouseMove.bind(this));\r\n    this.verticalBorder.addEventListener(\"touchstart\", this.AddEventTouchMove.bind(this));\r\n    document.addEventListener('mouseup', this.MouseUpListener.bind(this));\r\n  }\r\n\r\n  private MouseUpListener() {\r\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\r\n  }\r\n\r\n  private TouchCancelListener() {\r\n    document.removeEventListener('touchmove', this.moveTouch);\r\n    document.removeEventListener('touchend', this.TouchCancelListener.bind(this));\r\n  }\r\n\r\n  private AddEventMouseMove(event: MouseEvent) {\r\n    this.verticalBorder.classList.add(\"slider-foreground\");\r\n    this.mouseX = event.clientX;\r\n    document.addEventListener('mousemove', this.mouseMoveHandler);\r\n    this.handleX = this.verticalBorder.getBoundingClientRect().left;\r\n  }\r\n\r\n  private MouseMoveHandler(event: MouseEvent) {\r\n    this.currentMargin = this.handleX - this.mouseX + event.clientX;\r\n    this.currentMargin -= this.parentElement.getBoundingClientRect().left;\r\n    this.MoveHandle();\r\n  }\r\n\r\n  private MoveHandle() {\r\n    if (this.currentMargin >= this.minMargin && this.currentMargin <= this.maxMargin) {\r\n      this.verticalBorder.style.left = `${this.currentMargin}px`;\r\n      this.setSelectValue = (this.currentMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n    } else {\r\n      if (this.currentMargin < this.minMargin) {\r\n        this.verticalBorder.style.left = `${this.minMargin}px`;\r\n        this.setSelectValue = (this.minMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n      } else {\r\n        this.verticalBorder.style.left = `${this.maxMargin}px`;\r\n        this.setSelectValue = (this.maxMargin + this.verticalBorder.offsetWidth / 2) / this.parentElement.offsetWidth;\r\n      }\r\n    }\r\n    this.Notify();\r\n  }\r\n\r\n  private AddEventTouchMove(event: TouchEvent) {\r\n    this.mouseX = event.targetTouches[0].pageX;\r\n    document.addEventListener(\"touchmove\", this.moveTouch);\r\n    document.addEventListener('touchend', this.TouchCancelListener.bind(this));\r\n    this.handleX = this.verticalBorder.getBoundingClientRect().left;\r\n  }\r\n\r\n  private MoveBlockTouch(event: TouchEvent) {\r\n    this.currentMargin = this.handleX - this.mouseX + event.targetTouches[0].pageX;\r\n    this.currentMargin -= this.parentElement.getBoundingClientRect().left;\r\n    this.MoveHandle();\r\n  }\r\n\r\n  private mouseMoveHandler = this.MouseMoveHandler.bind(this);\r\n\r\n  private moveTouch = this.MoveBlockTouch.bind(this);\r\n\r\n  SetCurrentMarginPercent(percent: number) {\r\n    if (percent <= 1 && percent >= 0) {\r\n      this.currentMargin = this.parentElement.offsetWidth * percent - this.verticalBorder.offsetWidth / 2;\r\n\r\n      if (this.currentMargin >= this.minMargin && this.currentMargin <= this.maxMargin) {\r\n        this.setSelectValue = percent;\r\n        this.verticalBorder.style.left = `${this.currentMargin}px`;\r\n        this.Notify();\r\n      }\r\n    }\r\n  }\r\n\r\n  SetMinMargin(minMargin: number) {\r\n    if (minMargin <= 1 && minMargin >= 0) {\r\n      this.minMargin = this.parentElement.offsetWidth * minMargin - this.verticalBorder.offsetWidth / 2;\r\n    }\r\n    this.verticalBorder.classList.remove(\"slider-foreground\");\r\n  }\r\n\r\n  SetMaxMargin(maxMargin: number) {\r\n    if (maxMargin <= 1 && maxMargin >= 0) {\r\n      this.maxMargin = this.parentElement.offsetWidth * maxMargin - this.verticalBorder.offsetWidth / 2;\r\n    }\r\n    this.verticalBorder.classList.remove(\"slider-foreground\");\r\n  }\r\n\r\n  AddObserver(controlObserver: ControlObserverCoordinate) {\r\n    this.observer.push(controlObserver);\r\n  }\r\n\r\n  DeleteObserver(controlObserver: ControlObserverCoordinate) {\r\n    const index = this.observer.indexOf(controlObserver);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  Notify() {\r\n    if (this.observer !== null || this.observer !== undefined) {\r\n      this.observer.forEach(el => {\r\n        el.SetCoordinatePercent(this.setSelectValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  GetSetSelectValue(): number {\r\n    return this.setSelectValue;\r\n  }\r\n\r\n}\r\n","import './Column.scss';\r\n\r\nexport interface LeftWidth {\r\n  ChangeWidthLeft(coordinatePercent: number): void;\r\n}\r\n\r\nexport interface RightWidth {\r\n  ChangeWidthRight(coordinatePercent: number): void;\r\n}\r\n\r\nexport interface Columns extends LeftWidth, RightWidth {\r\n  AddContent(elementHTML: HTMLElement): void;\r\n  DeleteContent(): void;\r\n}\r\n\r\nexport default class Column implements Columns, RightWidth, LeftWidth {\r\n\r\n  constructor(parentElement: HTMLElement, name = '') {\r\n    this.parentElement = parentElement;\r\n    this.name = name;\r\n    this.Init();\r\n  }\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private column: HTMLElement;\r\n\r\n  private coordinate: number;\r\n\r\n  private changeWidth: number;\r\n\r\n  private left: number;\r\n\r\n  private changeLeft: number;\r\n\r\n  private name: string;\r\n\r\n  Init() {\r\n    this.CreateElements();\r\n    this.AddClasses();\r\n    this.AddContentHTML();\r\n  }\r\n\r\n  private CreateElements() {\r\n    this.column = document.createElement('div');\r\n  }\r\n\r\n  private AddClasses() {\r\n    this.column.classList.add('column');\r\n  }\r\n\r\n  private AddContentHTML() {\r\n    this.parentElement.appendChild(this.column);\r\n  }\r\n\r\n  private HeightParentElement(){\r\n    this.parentElement.style.height = `${this.column.offsetHeight}px`;\r\n  }\r\n\r\n  ChangeWidthLeft(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.left = this.parentElement.offsetWidth * coordinatePercent;\r\n      this.changeLeft = this.column.getBoundingClientRect().left - this.parentElement.getBoundingClientRect().left - this.left;\r\n      this.column.style.left = `${this.left}px`;\r\n      this.column.style.width = `${this.column.offsetWidth + this.changeLeft}px`;\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  ChangeWidthRight(coordinatePercent: number) {\r\n    if (coordinatePercent >= 0 && coordinatePercent <= 1) {\r\n      this.coordinate = this.parentElement.offsetWidth * coordinatePercent + this.parentElement.getBoundingClientRect().left;\r\n      this.changeWidth = this.coordinate - this.column.getBoundingClientRect().left - this.column.offsetWidth;\r\n      this.column.style.width = `${this.column.offsetWidth + this.changeWidth}px`;\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  AddContent(elementHTML: HTMLElement) {\r\n    this.column.appendChild(elementHTML);\r\n    this.HeightParentElement();\r\n  }\r\n\r\n  DeleteContent() {\r\n    while (this.column.childNodes.length > 1) {\r\n      const child = this.column.lastChild;\r\n      this.column.removeChild(child)\r\n    }\r\n    this.HeightParentElement();\r\n  }\r\n\r\n}","import { LineContent, LinesChange } from './Line';\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\n\r\n\r\nexport default class LineControl implements LinesChange {\r\n  constructor(lineArr: LineContent[], verticalBorderArr: ControlObservable[]) {\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.lineArr = lineArr;\r\n    this.Init();\r\n  }\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private lineArr: LineContent[];\r\n\r\n  private addLineArr: LineContent[];\r\n\r\n  private selectLine: number;\r\n\r\n  private methodGetSelectLine: (selectLine: number) => void;\r\n\r\n  private Init() {\r\n    this.ToLinkLines(this.lineArr);\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private ToLinkLines(lineArr: LineContent[]) {\r\n    lineArr.forEach((el, ind) => {\r\n      lineArr.forEach((element, index) => {\r\n        if (ind !== index)\r\n          el.AddObserver(element);\r\n      });\r\n      el.AddObserver(this);\r\n    });\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    this.verticalBorderArr.forEach(el => {\r\n      this.lineArr.forEach(element => {\r\n        el.AddObserver(element);\r\n      });\r\n    });\r\n  }\r\n\r\n  GetElementArr(): HTMLElement[] {\r\n    let contentLine: HTMLElement[] = [];\r\n    this.lineArr.forEach(el => {\r\n      contentLine = contentLine.concat(el.GetElementArr());\r\n    });\r\n    return contentLine.slice();\r\n  }\r\n\r\n  AddLines(lineArr: LineContent[]) {\r\n    this.addLineArr = lineArr;\r\n    this.ToLinkLines(this.addLineArr);\r\n    this.ToLinkLinesAddArr();\r\n    this.Concat();\r\n  }\r\n\r\n  private ToLinkLinesAddArr() {\r\n    this.addLineArr.forEach(el => {\r\n      this.lineArr.forEach(element => {\r\n        el.AddObserver(element);\r\n      });\r\n    });\r\n  }\r\n\r\n  private Concat() {\r\n    this.lineArr.concat(this.addLineArr);\r\n  }\r\n\r\n  ChangeLine() {\r\n    this.lineArr.forEach((el, index) => {\r\n      if (el.GetSelect()) {\r\n        this.selectLine = index;\r\n      }\r\n    });\r\n      this.methodGetSelectLine(this.selectLine);\r\n  }\r\n\r\n  SetMethodGetSelectLine(methodGetSelectLine: (selectLine: number) => void) {\r\n    this.methodGetSelectLine = methodGetSelectLine;\r\n  }\r\n\r\n}","import { Lines } from './Line';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder';\r\n\r\n\r\nexport default class LineHeader implements Lines, ControlObserverCoordinate{\r\n  constructor(contentLineArr: HTMLElement[]) {\r\n    this.contentLineArr = contentLineArr;\r\n    this.Init();\r\n  }\r\n  \r\n  private heightArr: number[] = [];\r\n\r\n  private contentLineArr: HTMLElement[];\r\n\r\n  private containerContentLineArr: HTMLElement[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n  }\r\n\r\n  private Create() {\r\n    this.contentLineArr.forEach(el => {\r\n      const container = document.createElement('div');\r\n      container.classList.add('line-container-header');\r\n      container.classList.add('line-container');\r\n      container.appendChild(el);\r\n      this.containerContentLineArr.push(container);\r\n    })\r\n  }\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = 'auto';\r\n      });\r\n\r\n      this.heightArr.length = 0;\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        this.heightArr.push(el.offsetHeight);\r\n      });\r\n\r\n      this.heightArr.sort(this.Compare);\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = `${this.heightArr[this.heightArr.length - 1]}px`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private Compare(a: number, b: number) {\r\n    if (a > b) return 1;\r\n    if (a == b) return 0;\r\n    if (a < b) return -1;\r\n  }\r\n\r\n  GetElementArr(){\r\n    return this.containerContentLineArr.slice();\r\n  }\r\n}","import { ControlObserverCoordinate } from '../Control/VerticalBorder';\r\nimport './Line.scss';\r\n\r\nexport interface LineObserverSelect {\r\n  AddObserver(lineChange: LinesChange): void;\r\n  DeleteObserver(lineChange: LinesChange): void;\r\n  Notify(): void;\r\n}\r\n\r\nexport interface LinesChange {\r\n  ChangeLine(): void;\r\n}\r\n\r\nexport interface Lines {\r\n  GetElementArr(): HTMLElement[];\r\n}\r\n\r\nexport interface LineContent extends Lines, LineObserverSelect, LinesChange, ControlObserverCoordinate {\r\n  GetElementArr(): HTMLElement[];\r\n  GetSelect(): boolean;\r\n}\r\n\r\nexport default class Line implements LineContent {\r\n  constructor(contentLineArr: HTMLElement[]) {\r\n    this.contentLineArr = contentLineArr;\r\n    this.Init();\r\n  }\r\n\r\n  private heightArr: number[] = [];\r\n\r\n  private contentLineArr: HTMLElement[];\r\n\r\n  private containerContentLineArr: HTMLElement[] = [];\r\n\r\n  private linesChange: LinesChange[] = [];\r\n\r\n  private select = false;\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddListeners();\r\n  }\r\n\r\n  private Create() {\r\n    this.contentLineArr.forEach(el => {\r\n      const container = document.createElement('div');\r\n      container.classList.add('line-container');\r\n      container.appendChild(el);\r\n      this.containerContentLineArr.push(container);\r\n    })\r\n  }\r\n\r\n  private AddListeners() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('click', this.ClickContainerListener.bind(this))\r\n    });\r\n\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('mouseenter', this.SelectContainerHover.bind(this))\r\n    });\r\n\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.addEventListener('mouseleave', this.SelectElementHandlerOff.bind(this))\r\n    });\r\n  }\r\n\r\n  private ClickContainerListener() {\r\n    this.SelectElement();\r\n    this.select = true;\r\n    this.Notify();\r\n  }\r\n\r\n  private SelectElement() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.classList.add('line-container-select');\r\n      el.classList.remove('line-container-hover');\r\n    });\r\n  }\r\n\r\n  private SelectElementHandlerOff() {\r\n    if (!this.select) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.classList.remove('line-container-hover');\r\n      });\r\n    }\r\n  }\r\n\r\n  private SelectContainerHover() {\r\n    if (!this.select)\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.classList.add('line-container-hover');\r\n      });\r\n  }\r\n\r\n  private SelectElementOff() {\r\n    this.containerContentLineArr.forEach(el => {\r\n      el.classList.remove('line-container-select');\r\n    });\r\n  }\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (coordinatePercent <= 1 && coordinatePercent >= 0) {\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = 'auto';\r\n      });\r\n\r\n      this.heightArr.length = 0;\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        this.heightArr.push(el.offsetHeight);\r\n      });\r\n\r\n      this.heightArr.sort(this.Compare);\r\n\r\n      this.containerContentLineArr.forEach(el => {\r\n        el.style.height = `${this.heightArr[this.heightArr.length - 1]}px`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private Compare(a: number, b: number) {\r\n    if (a > b) return 1;\r\n    if (a == b) return 0;\r\n    if (a < b) return -1;\r\n  }\r\n\r\n\r\n\r\n  GetElementArr(): HTMLElement[] {\r\n    return this.containerContentLineArr.slice();\r\n  }\r\n\r\n  ChangeLine() {\r\n    if (this.select) {\r\n      this.SelectElementOff();\r\n    }\r\n    this.select = false;\r\n  }\r\n\r\n\r\n\r\n  AddObserver(lineChange: LinesChange) {\r\n    this.linesChange.push(lineChange);\r\n  }\r\n\r\n  DeleteObserver(lineChange: LinesChange) {\r\n    const index = this.linesChange.indexOf(lineChange);\r\n    if (index > -1) {\r\n      this.linesChange.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  Notify() {\r\n    this.linesChange.forEach(el => {\r\n      el.ChangeLine();\r\n    });\r\n  }\r\n\r\n\r\n  GetSelect(): boolean {\r\n    return this.select;\r\n  }\r\n\r\n}","import Line, { Lines, LineContent } from './Line';\r\n\r\nexport interface CreatorLineContent{\r\n  FactoryMethod(count: number, contentArr: HTMLElement[]): LineContent[];\r\n}\r\n\r\nexport default class CreatorLine implements CreatorLineContent{\r\n  FactoryMethod(count: number, contentArr: HTMLElement[]): LineContent[] {\r\n    const lineArr: LineContent[] = [];\r\n    let contentLineArr: HTMLElement[] = []\r\n    let num: number = contentArr.length/count;\r\n    \r\n    for (let i = 0; i < num; i++) {\r\n      contentLineArr = contentArr.splice(0, count);\r\n      const line = new Line(contentLineArr.slice());\r\n      lineArr.push(line);\r\n    }\r\n    return lineArr.slice();\r\n  }\r\n}","import { RightWidth } from './Column';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder'\r\n\r\nexport default class RightWidthMove implements ControlObserverCoordinate {\r\n  private observer: RightWidth[] = [];\r\n\r\n  AddObserver(observer: RightWidth) {\r\n    this.observer.push(observer);\r\n  }\r\n\r\n  DeleteObserver(observer: RightWidth) {\r\n    const index = this.observer.indexOf(observer);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  SetCoordinatePercent(coordinate: number) {\r\n    this.observer.forEach(el => {\r\n      el.ChangeWidthRight(coordinate);\r\n    });\r\n  }\r\n\r\n}","import { LeftWidth } from './Column';\r\nimport { ControlObserverCoordinate } from '../Control/VerticalBorder'\r\n\r\nexport default class LeftWidthMove implements ControlObserverCoordinate {\r\n\r\n  private observer: LeftWidth[] = [];\r\n\r\n  AddObserver(observer: LeftWidth) {\r\n    this.observer.push(observer);\r\n  }\r\n\r\n  DeleteObserver(observer: LeftWidth) {\r\n    const index = this.observer.indexOf(observer);\r\n    if (index > -1) {\r\n      this.observer.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  SetCoordinatePercent(coordinate: number) {\r\n    this.observer.forEach(el => {\r\n      el.ChangeWidthLeft(coordinate);\r\n    });\r\n  }\r\n\r\n}","\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\nimport RightWidthMove from './RightWidth';\r\nimport LeftWidthMove from './LeftWidth';\r\nimport { Columns } from './Column';\r\n\r\nexport default class ColumnControl {\r\n  constructor(columnArr: Columns[], verticalBorderArr: ControlObservable[]) {\r\n    this.columnArr = columnArr;\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.Init();\r\n  }\r\n\r\n  private columnArr: Columns[];\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private leftWidthMoveArr: LeftWidthMove[] = [];\r\n\r\n  private rightWidthMoveArr: RightWidthMove[] = [];\r\n\r\n  private Init() {\r\n    this.Create();\r\n    this.AddObserversMove();\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private Create() {\r\n    for (let i = 0; i < this.verticalBorderArr.length; i++) {\r\n      this.leftWidthMoveArr.push(new LeftWidthMove);\r\n      this.rightWidthMoveArr.push(new RightWidthMove);\r\n    }\r\n  }\r\n\r\n  private AddObserversMove() {\r\n    this.rightWidthMoveArr[0].AddObserver(this.columnArr[0]);\r\n    const count = this.verticalBorderArr.length - 1;\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      if (index > 0 && index < this.verticalBorderArr.length) {\r\n        this.rightWidthMoveArr[index].AddObserver(el);\r\n        this.leftWidthMoveArr[index - 1].AddObserver(el);\r\n      }\r\n    });\r\n    this.leftWidthMoveArr[count].AddObserver(this.columnArr[count + 1]);\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    const count = this.verticalBorderArr.length - 1;\r\n    this.verticalBorderArr[0].AddObserver(this.rightWidthMoveArr[0]);\r\n    this.verticalBorderArr[count].AddObserver(this.leftWidthMoveArr[count]);\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      if (index > 0 && index < this.columnArr.length - 1) {\r\n        this.verticalBorderArr[index].AddObserver(this.rightWidthMoveArr[index]);\r\n        this.verticalBorderArr[index - 1].AddObserver(this.leftWidthMoveArr[index - 1]);\r\n      }\r\n    });\r\n\r\n    // this.columnArr[0].ChangeWidthLeft(0);\r\n    this.columnArr[this.columnArr.length - 1].ChangeWidthRight(1);\r\n  }\r\n\r\n  AddContentHTMLInColumn(contentArr: HTMLElement[]) {\r\n    contentArr.forEach((el, index) => {\r\n      let count = ((index + 1) % this.columnArr.length) - 1;\r\n      if (count === -1)\r\n        count = this.columnArr.length - 1;\r\n      this.columnArr[count].AddContent(el);\r\n    });\r\n  }\r\n\r\n  DeleteContent() {\r\n    this.columnArr.forEach(el => {\r\n      el.DeleteContent();\r\n    })\r\n  }\r\n\r\n}","import Column from './Column';\r\nimport LineControl from './LineFacade';\r\nimport { ControlObservable } from '../Control/VerticalBorder';\r\nimport LineHeader from './LineHeader';\r\nimport { LineContent } from './Line';\r\nimport CreatorLine from './CreatorLine';\r\nimport ColumnControl from './ColumnFacade';\r\n\r\nexport default class ColumnLineFacade {\r\n  constructor(\r\n    verticalBorderArr: ControlObservable[],\r\n    contentArr: HTMLElement[],\r\n    parentElement: HTMLElement\r\n  ) {\r\n    this.parentElement = parentElement;\r\n    this.contentArr = contentArr;\r\n    this.verticalBorderArr = verticalBorderArr;\r\n    this.Init();\r\n  }\r\n\r\n  private contentArr: HTMLElement[];\r\n\r\n  private columnArr: Column[] = [];\r\n\r\n  private parentElement: HTMLElement;\r\n\r\n  private verticalBorderArr: ControlObservable[];\r\n\r\n  private lineHeader: LineHeader;\r\n\r\n  private lineArr: LineContent[] = [];\r\n\r\n  private contentLineArr: HTMLElement[] = [];\r\n\r\n  private lineFacade: LineControl;\r\n\r\n  private columnControl: ColumnControl;\r\n\r\n  private count: number;\r\n\r\n  private methodSelectLine: (selectLine: number) => void;\r\n\r\n  private Init() {\r\n    this.count = this.verticalBorderArr.length + 1;\r\n    this.CreateColumn();\r\n    this.CreateLines();\r\n    this.AddObserversInVerticalBorders();\r\n  }\r\n\r\n  private CreateColumn() {\r\n    for (let i = 0; i < this.count; i++) {\r\n      const column = new Column(this.parentElement);\r\n      this.columnArr.push(column);\r\n    }\r\n  }\r\n\r\n  private CreateLines() {\r\n    const contentLineArr = this.contentArr.splice(0, this.count);\r\n    this.lineHeader = new LineHeader(contentLineArr.slice());\r\n\r\n    this.columnArr.forEach((el, index) => {\r\n      el.AddContent(this.lineHeader.GetElementArr()[index]);\r\n    });\r\n\r\n    const creatorLine = new CreatorLine();\r\n    this.lineArr = creatorLine.FactoryMethod(this.count, this.contentArr.slice())\r\n\r\n    this.lineFacade = new LineControl(this.lineArr.slice(), this.verticalBorderArr.slice());\r\n    this.contentLineArr = this.lineFacade.GetElementArr();\r\n    this.columnControl = new ColumnControl(this.columnArr.slice(), this.verticalBorderArr.slice());\r\n    this.columnControl.AddContentHTMLInColumn(this.contentLineArr);\r\n  }\r\n\r\n  private AddObserversInVerticalBorders() {\r\n    this.verticalBorderArr.forEach(el => {\r\n      el.AddObserver(this.lineHeader);\r\n    })\r\n  }\r\n\r\n  UpdatePosition() {\r\n    this.columnArr[this.columnArr.length - 1].ChangeWidthRight(1);\r\n  }\r\n\r\n  NewContent(contentArr: HTMLElement[]) {\r\n    this.columnControl.DeleteContent();\r\n    this.contentArr = contentArr;\r\n\r\n    const creatorLine = new CreatorLine();\r\n    this.lineArr = creatorLine.FactoryMethod(this.count, this.contentArr.slice());\r\n\r\n    this.lineFacade = new LineControl(this.lineArr.slice(), this.verticalBorderArr.slice());\r\n    this.lineFacade.SetMethodGetSelectLine(this.methodSelectLine);\r\n    this.contentLineArr = this.lineFacade.GetElementArr();\r\n\r\n    this.columnControl.AddContentHTMLInColumn(this.contentLineArr.slice());\r\n  }\r\n\r\n  SetMethodGetSelectLine(methodGetSelectLine: (selectLine: number) => void) {\r\n    this.methodSelectLine = methodGetSelectLine;\r\n    this.lineFacade.SetMethodGetSelectLine(methodGetSelectLine);\r\n  }\r\n\r\n}","import { ControlObserverCoordinate, ControlMax } from './VerticalBorder';\r\n\r\n\r\nexport default class MaxMargin implements ControlObserverCoordinate {\r\n  constructor(maxValue: ControlMax[] = null) {\r\n    this.maxValue = maxValue;\r\n  }\r\n\r\n  private maxValue: ControlMax[];\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (this.maxValue !== null) {\r\n      this.maxValue.forEach((el) => {\r\n        el.SetMaxMargin(coordinatePercent);\r\n      });\r\n    }\r\n  }\r\n\r\n  AddMaxMarginObserver(maxValue: ControlMax){\r\n    this.maxValue.push(maxValue);\r\n  }\r\n\r\n  DeleteMaxMarginObserver(maxValue: ControlMax){\r\n    const index = this.maxValue.indexOf(maxValue);\r\n    if (index > -1) {\r\n      this.maxValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  // for tests\r\n\r\n  GetObserver(): ControlMax[] {\r\n    return this.maxValue.slice();\r\n  }\r\n\r\n}","import { ControlMin, ControlObserverCoordinate } from './VerticalBorder';\r\n\r\n\r\nexport default class MinMargin implements ControlObserverCoordinate {\r\n  constructor(minValue: ControlMin[] = null) {\r\n    this.minValue = minValue;\r\n  }\r\n\r\n  private minValue: ControlMin[];\r\n\r\n  SetCoordinatePercent(coordinatePercent: number) {\r\n    if (this.minValue !== null) {\r\n      this.minValue.forEach((el) => {\r\n        el.SetMinMargin(coordinatePercent);\r\n      });\r\n    }\r\n  }\r\n\r\n  AddMinMarginObserver(minValue: ControlMin) {\r\n    this.minValue.push(minValue);\r\n  }\r\n\r\n  DeleteMinMarginObserver(minValue: ControlMin) {\r\n    const index = this.minValue.indexOf(minValue);\r\n    if (index > -1) {\r\n      this.minValue.splice(index, 1);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // for tests\r\n\r\n  GetObserver(): ControlMin[] {\r\n    return this.minValue.slice();\r\n  }\r\n  \r\n}\r\n","import { ControlObservable, Borders } from './VerticalBorder';\r\nimport MaxMargin from './MaxMargin';\r\nimport MinMargin from './MinMargin';\r\n\r\nexport default class BordersControl {\r\n  constructor(bordersArr: Borders[]) {\r\n    this.bordersArr = bordersArr;\r\n    this.Init();\r\n  }\r\n\r\n  private bordersArr: Borders[];\r\n\r\n  private Init() {\r\n    this.bordersArr.forEach((el, index) => {\r\n      if (index < this.bordersArr.length - 1) {\r\n        const maxMargin = new MaxMargin([el]);\r\n        const nextElement = this.bordersArr[index + 1]\r\n        nextElement.AddObserver(maxMargin);\r\n        const minMargin = new MinMargin([nextElement])\r\n        el.AddObserver(minMargin);\r\n      }\r\n    });\r\n  }\r\n\r\n  GetVerticalBorderArr(): ControlObservable[] {\r\n    return this.bordersArr.slice();\r\n  }\r\n\r\n  SetDefaultPosition() {\r\n    const middleWidth = 1 / (this.bordersArr.length + 1);\r\n    this.bordersArr.forEach((el, index) => {\r\n      el.SetCurrentMarginPercent(middleWidth * (index + 1));\r\n    });\r\n  }\r\n\r\n  UpdatePosition() {\r\n    this.bordersArr[this.bordersArr.length-1].SetMaxMargin(1);\r\n    this.bordersArr.forEach(el => {\r\n      const setSelectValue = el.GetSetSelectValue();\r\n      el.SetCurrentMarginPercent(setSelectValue);\r\n    });\r\n  }\r\n\r\n}","import React, { Component } from 'react';\r\nimport './Table.scss';\r\nimport VerticalBorder from './Control/VerticalBorder';\r\nimport ColumnLineFacade from './View/ColumnLineFacade';\r\nimport BordersControl from './Control/BordersFacade';\r\nimport { stateType } from './../../store/store';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface ImapStateToProps {\r\n  machines?: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }[]\r\n}\r\n\r\ninterface ITableProps extends ImapStateToProps {\r\n  GetMachine: (machineJSON: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }) => void;\r\n}\r\n\r\nclass Table extends Component<ITableProps> {\r\n  render() {\r\n    this.ChangeContent();\r\n    return (\r\n      <div className='table' ref='table'></div>\r\n    );\r\n  }\r\n\r\n  private contentLineArr: HTMLElement[] = [];\r\n\r\n  private header: HTMLElement[] = [];\r\n\r\n  private names = [\r\n    'Id',\r\n    'Name',\r\n    'Create Year',\r\n  ];\r\n\r\n  private columnCount = 3;\r\n\r\n  selectLine: number;\r\n\r\n  private currentElement: HTMLElement;\r\n\r\n  private verticalBorderArr: VerticalBorder[] = [];\r\n\r\n  private size: number;\r\n\r\n  private bordersControl: BordersControl;\r\n\r\n  private columnLineFacade: ColumnLineFacade;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.CreateHeader();\r\n    this.CreateLineArr(this.props.machines);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.currentElement = this.refs.table as HTMLElement;\r\n    this.Init(this.contentLineArr);\r\n  }\r\n\r\n  private CreateHeader() {\r\n    this.names.forEach(el => {\r\n      const elHTML = document.createElement('div');\r\n      elHTML.innerText = el;\r\n      this.header.push(elHTML);\r\n    });\r\n  }\r\n\r\n  private CreateLineArr(machineJSONArr: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n  }[]) {\r\n    const contentLineArr: HTMLElement[] = [];\r\n    if (machineJSONArr) {\r\n      machineJSONArr.forEach(el => {\r\n        const elId = document.createElement('div');\r\n        elId.innerText = `${el.id}`;\r\n        contentLineArr.push(elId);\r\n\r\n        const elName = document.createElement('div');\r\n        elName.innerText = el.name;\r\n        contentLineArr.push(elName);\r\n\r\n        const elYear = document.createElement('div');\r\n        elYear.innerText = `${el.createYear}`;\r\n        contentLineArr.push(elYear);\r\n      });\r\n      this.contentLineArr = contentLineArr;\r\n    }\r\n  }\r\n\r\n  private Init(cont: HTMLElement[]) {\r\n    this.Create(cont);\r\n    this.IntervalCheckSize();\r\n  }\r\n\r\n  Create(cont: HTMLElement[]) {\r\n    for (let i = 0; i < this.columnCount - 1; i++) {\r\n      this.verticalBorderArr.push(new VerticalBorder(this.currentElement));\r\n    }\r\n\r\n    cont = this.header.concat(cont);\r\n\r\n    this.bordersControl = new BordersControl(this.verticalBorderArr.slice());\r\n    this.columnLineFacade = new ColumnLineFacade(this.bordersControl.GetVerticalBorderArr(), cont.slice(), this.currentElement);\r\n    this.columnLineFacade.SetMethodGetSelectLine(this.SetSelectLine.bind(this));\r\n    this.bordersControl.SetDefaultPosition();\r\n  }\r\n\r\n  private ChangeContent() {\r\n    this.CreateLineArr(this.props.machines);\r\n    this.AddLines(this.contentLineArr);\r\n  }\r\n\r\n  private AddLines(contentLineArr: HTMLElement[]) {\r\n    this.currentElement = this.refs.table as HTMLElement;\r\n    if (this.currentElement) {\r\n      this.NewLines(contentLineArr);\r\n    }\r\n  }\r\n\r\n  private NewLines(contentLineArr: HTMLElement[]) {\r\n    this.columnLineFacade.NewContent(contentLineArr.slice());\r\n    this.bordersControl.UpdatePosition();\r\n    this.SetSelectLine(-1);\r\n  }\r\n\r\n  private SetSelectLine(selectLine: number): void {\r\n    this.selectLine = selectLine;\r\n    if (this.props.GetMachine)\r\n      if (selectLine !== -1)\r\n        this.props.GetMachine(this.props.machines[selectLine]);\r\n      else\r\n        this.props.GetMachine(null);\r\n  }\r\n\r\n  private IntervalCheckSize() {\r\n    this.size = this.currentElement.offsetWidth;\r\n    setInterval(() => {\r\n      if (this.currentElement.offsetWidth !== this.size) {\r\n        this.bordersControl.UpdatePosition();\r\n        this.columnLineFacade.UpdatePosition();\r\n      }\r\n    }, 50);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state: stateType) {\r\n  return {\r\n    machines: state.machineJSONArr.machineJSONArr\r\n  };\r\n}\r\n\r\nexport default connect<ImapStateToProps, {}, ITableProps, stateType>(\r\n  mapStateToProps\r\n)(Table);","import React from 'react';\r\nimport Hierarchy from './components/Hierarchy';\r\nimport { connect } from 'react-redux';\r\nimport Table from './components/table/Table';\r\nimport { stateType } from './store/store';\r\nimport './App.scss';\r\nimport Button from './components/Button/Button';\r\nimport { bindActionCreators } from 'redux';\r\nimport { openEditMachineForm } from './store/actions/actions';\r\nimport {\r\n  deleteMachine,\r\n  getMoreMachines\r\n} from './store/actions/Machines/Machines';\r\n\r\ninterface IAppProps extends ImapDispatchToProps {\r\n}\r\n\r\ninterface ImapDispatchToProps {\r\n  deleteMachine?: (id: number) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  getMoreMachines?: () => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  openEditMachineForm?: (machine: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }) => (dispatch: any, getState: () => stateType) => void;\r\n}\r\n\r\nclass App extends React.Component<IAppProps> {\r\n\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n\r\n  private machine: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <Hierarchy />\r\n        <div className='app__table-container'>\r\n          <div className='app__table-edit-delete'>\r\n            <div className='app__edit'>\r\n              <Button name='Редактировать' ClickHandler={this.EditMachine.bind(this)} />\r\n            </div>\r\n            <div className='app__delete'>\r\n              <Button name='Удалить' ClickHandler={this.DeleteMachine.bind(this)} />\r\n            </div>\r\n          </div>\r\n          <Table GetMachine={this.SetMachine.bind(this)} />\r\n          <Button name='Ещё' ClickHandler={this.MoreMachines.bind(this)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private EditMachine() {\r\n    if (this.machine)\r\n      this.props.openEditMachineForm(this.machine);\r\n  }\r\n\r\n  private DeleteMachine() {\r\n    if (this.machine) {\r\n      const isDeleteMachine = window.confirm(`Вы действительно хотите удалить комнату \"${this.machine.name}\" ?`);\r\n      if (isDeleteMachine)\r\n        this.props.deleteMachine(this.machine.id);\r\n    }\r\n  }\r\n\r\n  private SetMachine(machine: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  }) {\r\n    this.machine = machine;\r\n  }\r\n\r\n  private MoreMachines() {\r\n    this.props.getMoreMachines();\r\n  }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    deleteMachine,\r\n    getMoreMachines,\r\n    openEditMachineForm,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<{}, ImapDispatchToProps, IAppProps, {}>(\r\n  null,\r\n  mapDispatchToProps\r\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  setConstructionJSON,\r\n  setVisibleAddEditConstructionForm,\r\n  setHeaderName,\r\n  setSubmitName,\r\n  setPath,\r\n  setConstructionTemplate,\r\n} from '../../actions/AddEditConstruction/AddEditConstruction';\r\n\r\ntype ActionTypes =\r\n  ReturnType<typeof setConstructionJSON>\r\n  | ReturnType<typeof setVisibleAddEditConstructionForm>\r\n  | ReturnType<typeof setHeaderName>\r\n  | ReturnType<typeof setPath>\r\n  | ReturnType<typeof setSubmitName>\r\n  | ReturnType<typeof setConstructionTemplate>\r\n  ;\r\n\r\nexport const reducer = function (state = {\r\n  constructionJSON: {\r\n    id: 0,\r\n    name: '',\r\n    address: '',\r\n    haveMachine: false,\r\n  },\r\n  visible: false,\r\n  headerName: '',\r\n  submitName: '',\r\n  path: '',\r\n  editPath: ''\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"ADD_EDIT_CONSTRUCTION_SET_VISIBLE\":\r\n      return { ...state, visible: action.payload }\r\n    case \"ADD_EDIT_CONSTRUCTION_SET_CONSTRUCTION_JSON\":\r\n      return { ...state, constructionJSON: action.payload }\r\n    case 'ADD_EDIT_CONSTRUCTION_SET_HEADER_NAME':\r\n      return { ...state, headerName: action.payload }\r\n    case 'ADD_EDIT_CONSTRUCTION_SET_SUBMIT_NAME':\r\n      return { ...state, submitName: action.payload }\r\n    case 'ADD_EDIT_CONSTRUCTION_SET_PATH':\r\n      return { ...state, path: action.payload }\r\n    case 'ADD_EDIT_CONSTRUCTION_SET_CONSTRUCTION_TEMPLATE':\r\n      return {\r\n        ...state,\r\n        constructionJSON: action.payload.constructionJSON,\r\n        visible: action.payload.visible,\r\n        headerName: action.payload.headerName,\r\n        submitName: action.payload.submitName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  setMachineJSON,\r\n  setVisibleAddEditMachineForm,\r\n  setHeaderName,\r\n  setSubmitName,\r\n  setPath,\r\n  setEditPath,\r\n  setAddPathInConstruction,\r\n  setAddPathInRoom,\r\n  setDeletePathInConstruction,\r\n  setDeletePathInRoom,\r\n  setEditPathInConstruction,\r\n  setEditPathInRoom,\r\n  setMachineTemplate,\r\n  setAddEditDeletePathsInRoom,\r\n  setEditDeletePathsInConstruction,\r\n} from '../../actions/AddEditMachine/AddEditMachine';\r\n\r\ntype ActionTypes = ReturnType<typeof setMachineJSON>\r\n  | ReturnType<typeof setVisibleAddEditMachineForm>\r\n  | ReturnType<typeof setHeaderName>\r\n  | ReturnType<typeof setPath>\r\n  | ReturnType<typeof setSubmitName>\r\n  | ReturnType<typeof setEditPath>\r\n  | ReturnType<typeof setAddPathInConstruction>\r\n  | ReturnType<typeof setDeletePathInConstruction>\r\n  | ReturnType<typeof setEditPathInConstruction>\r\n  | ReturnType<typeof setAddPathInRoom>\r\n  | ReturnType<typeof setDeletePathInRoom>\r\n  | ReturnType<typeof setEditPathInRoom>\r\n  | ReturnType<typeof setMachineTemplate>\r\n  | ReturnType<typeof setAddEditDeletePathsInRoom>\r\n  | ReturnType<typeof setEditDeletePathsInConstruction>\r\n  ;\r\n\r\nexport let reducer = function (state = {\r\n  machineJSON: {\r\n    id: 0,\r\n    name: '',\r\n    createYear: 0,\r\n    roomId: 0\r\n  },\r\n  visible: false,\r\n  headerName: '',\r\n  submitName: '',\r\n  path: '',\r\n  addPath: '',\r\n  editPath: '',\r\n  deletePath: ''\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"ADD_EDIT_MACHINE_SET_MACHINE_JSON\":\r\n      return { ...state, machineJSON: action.payload };\r\n    case 'ADD_EDIT_MACHINE_SET_VISIBLE':\r\n      return { ...state, visible: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_HEADER_NAME':\r\n      return { ...state, headerName: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_SUBMIT_NAME':\r\n      return { ...state, submitName: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_PATH':\r\n      return { ...state, path: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_EDIT_PATH':\r\n      return { ...state, editPath: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_ADD_PATH':\r\n      return { ...state, addPath: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_DELETE_PATH':\r\n      return { ...state, deletePath: action.payload }\r\n    case 'ADD_EDIT_MACHINE_SET_MACHINE_TEMPLATE':\r\n     console.warn(action.payload.machineJSON); return {\r\n        ...state,\r\n        visible: action.payload.visible,\r\n        machineJSON: action.payload.machineJSON,\r\n        headerName: action.payload.headerName,\r\n        submitName: action.payload.submitName\r\n      }\r\n    case 'ADD_EDIT_MACHINE_SET_ADD_EDIT_DELETE-PATHS':\r\n      return {\r\n        ...state,\r\n        addPath: action.payload.addPath,\r\n        editPath: action.payload.editPath,\r\n        deletePath: action.payload.deletePath,\r\n      }\r\n    case 'ADD_EDIT_MACHINE_SET_EDIT_DELETE_PATHS':\r\n      return {\r\n        ...state,\r\n        editPath: action.payload.editPath,\r\n        deletePath: action.payload.deletePath,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","import {\r\n  setVisibleAddEditRoomForm,\r\n  setRoomJSON,\r\n  setPath,\r\n  setHeaderName,\r\n  setSubmitName,\r\n  setAddEditRoomTemplate\r\n} from '../../actions/AddEditRoom/AddEditRoom';\r\n\r\ntype ActionTypes = ReturnType<typeof setRoomJSON>\r\n  | ReturnType<typeof setVisibleAddEditRoomForm>\r\n  | ReturnType<typeof setPath>\r\n  | ReturnType<typeof setHeaderName>\r\n  | ReturnType<typeof setSubmitName>\r\n  | ReturnType<typeof setAddEditRoomTemplate>;\r\n\r\nexport let reducer = function (state = {\r\n  visible: false,\r\n  roomJSON: {\r\n    id: 0,\r\n    name: '',\r\n    floor: 0,\r\n    constructionId: 0,\r\n    haveMachine: false,\r\n  },\r\n  headerName: '',\r\n  submitName: '',\r\n  path: ''\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"ADD_EDIT_ROOM_SET_VISIBLE\":\r\n      return { ...state, visible: action.payload }\r\n    case \"ADD_EDIT_ROOM_SET_ROOM_JSON\":\r\n      return { ...state, roomJSON: action.payload }\r\n    case \"ADD_EDIT_ROOM_SET_PATH\":\r\n      return { ...state, path: action.payload }\r\n    case \"ADD_EDIT_ROOM_SET_HEADER_NAME\":\r\n      return { ...state, headerName: action.payload }\r\n    case \"ADD_EDIT_ROOM_SET_SUBMIT_NAME\":\r\n      return { ...state, submitName: action.payload }\r\n    case 'ADD_EDIT_ROOM_SET_ROOM_TEMPLATE':\r\n      return  { \r\n        ...state,\r\n        roomJSON: action.payload.roomJSON,\r\n        visible: action.payload.visible,\r\n        headerName: action.payload.headerName,\r\n        submitName: action.payload.submitName, } \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","import { setConstructionJSONArr } from '../../actions/ConstructionJSONArr/ConstructionJSONArr';\r\n\r\nexport type ActionTypes = ReturnType<typeof setConstructionJSONArr>;\r\n\r\nexport const reducer = function (state: {\r\n  constructionJSONArr: {\r\n    id: number\r\n    name: string\r\n    address: string\r\n    haveMachine: boolean\r\n  }[]\r\n} = { constructionJSONArr: [] }, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"CONSTRUCTION_JSON_ARR_SET_CONSTRUCTION_JSON\":\r\n     console.warn(action.payload); return { ...state, constructionJSONArr: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default reducer;","import { setMachineArr } from '../../actions/Machines/Machines';\r\n\r\ntype ActionTypes = ReturnType<typeof setMachineArr>;\r\n\r\nexport const reducer = function (state: {\r\n    machineJSONArr: {\r\n        id: number;\r\n        name: string;\r\n        createYear: number;\r\n        roomId: number;\r\n    }[]\r\n} = {\r\n        machineJSONArr: null\r\n    }, action: ActionTypes) {\r\n    switch (action.type) {\r\n        case 'SET_MACHINE_ARR':\r\n            return { ...state, machineJSONArr: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import {\r\n  addRooms,\r\n  setRooms\r\n} from '../../actions/Rooms/Rooms';\r\n\r\nexport type ActionTypes =\r\n  ReturnType<typeof addRooms>\r\n  | ReturnType<typeof setRooms>\r\n  ;\r\n\r\nexport const roomReducer = function (state: {\r\n  rooms: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean\r\n  }[]\r\n} = { rooms: [] }, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"ROOMS_ADD_ROOMS\":\r\n      return { ...state, rooms: action.payload.concat(state.rooms) }\r\n    case \"ROOMS_SET_ROOMS\":\r\n      return { ...state, rooms: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default roomReducer;","import {\r\n  setQuantityMoreMachines,\r\n  setSkipMoreMachines,\r\n  setGetMachineInConstructionPathMoreMachines,\r\n  setGetMachineInRoomPathMoreMachines,\r\n} from '../../actions/MoreMachines/MoreMachines';\r\n\r\nexport type ActionTypes =\r\n  ReturnType<typeof setQuantityMoreMachines>\r\n  | ReturnType<typeof setSkipMoreMachines>\r\n  | ReturnType<typeof setGetMachineInConstructionPathMoreMachines>\r\n  | ReturnType<typeof setGetMachineInRoomPathMoreMachines>\r\n  ;\r\n\r\nexport const roomReducer = function (state = {\r\n  quantity: 10,\r\n  skip: 0,\r\n  path: '',\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"MORE_MACHINE_SET_QUANTITY\":\r\n      return { ...state, quantity: action.payload }\r\n    case \"MORE_MACHINE_SET_SKIP\":\r\n      return { ...state, skip: action.payload }\r\n    case \"MORE_MACHINE_SET_PATH\":\r\n      return { ...state, path: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default roomReducer;","import {\r\n  setSkipQuantityMoreRooms,\r\n  addSkipQuantityMoreRooms\r\n} from '../../actions/MoreRooms/MoreRooms';\r\n\r\nexport type ActionTypes =\r\n  ReturnType<typeof setSkipQuantityMoreRooms>\r\n  | ReturnType<typeof addSkipQuantityMoreRooms>\r\n  ;\r\n\r\nexport const moreRooms = function (state: {\r\n  skipQuantityConstriction: {\r\n    skip: number,\r\n    quantity: number,\r\n    constructionId: number,\r\n  }[],\r\n} = {\r\n    skipQuantityConstriction: [],\r\n  }, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"MORE_ROOMS_SET_SKIP_QUANTITY\":\r\n      return { ...state, skipQuantityConstriction: action.payload }\r\n    case \"MORE_ROOMS_ADD_SKIP_QUANTITY\":\r\n      return { ...state, skipQuantityConstriction: action.payload.concat(state.skipQuantityConstriction) }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default moreRooms;","import {\r\n  setQuantityMoreConstructions,\r\n  setSkipMoreConstructions,\r\n} from '../../actions/MoreConstructions/MoreConstructions';\r\n\r\nexport type ActionTypes =\r\n  ReturnType<typeof setQuantityMoreConstructions>\r\n  | ReturnType<typeof setSkipMoreConstructions>\r\n  ;\r\n\r\nexport const roomReducer = function (state = {\r\n  quantity: 10,\r\n  skip: 0,\r\n  // path: '',\r\n}, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case \"MORE_CONSTRUCTIONS_SET_QUANTITY\":\r\n      return { ...state, quantity: action.payload }\r\n    case \"MORE_CONSTRUCTIONS_SET_SKIP\":\r\n      return { ...state, skip: action.payload }\r\n    // case \"MORE_CONSTRUCTIONS_SET_PATH\":\r\n    //   return { ...state, path: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default roomReducer;","import {combineReducers} from 'redux';\r\nimport addEditConstruction from './AddEditConstruction/AddEditConstruction';\r\nimport addEditMachine from './AddEditMachine/AddEditMachine';\r\nimport addEditRoom from './AddEditRoom/AddEditRoom';\r\nimport constructionJSONArr from './ConstructionJSONArr/ConstructionJSONArr';\r\nimport machineJSONArr from './Machines/Machines';\r\nimport roomReducer from './Rooms/Rooms'\r\nimport moreMachines from './MoreMachines/MoreMachines';\r\nimport moreRooms from './MoreRooms/MoreRooms';\r\nimport moreConstructions from './MoreConstructions/MoreConstructions';\r\n\r\nconst appReducers = combineReducers({\r\n  addEditConstruction,\r\n  addEditMachine,\r\n  addEditRoom,\r\n  constructionJSONArr,\r\n  machineJSONArr,\r\n  roomReducer,\r\n  moreMachines,\r\n  moreRooms,\r\n  moreConstructions,\r\n});\r\n\r\nexport default appReducers;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducesApp from './reducers/conbineReducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducesApp, applyMiddleware(thunk));\r\n\r\nexport type stateType = ReturnType<typeof store.getState>;\r\n\r\nconsole.warn(store.getState());\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport './Submit.scss';\r\n\r\ninterface ISubmitProps {\r\n  name: string;\r\n}\r\n\r\nexport default class Submit extends Component<ISubmitProps> {\r\n  render() {\r\n    return (\r\n      <input className='submit' type='submit' value={this.props.name} />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './Input.scss';\r\n\r\ninterface IInputProps {\r\n  text?: string;\r\n  value?: string\r\n  name: string;\r\n  type?: string;\r\n}\r\n\r\ninterface IInputState {\r\n  value?: string;\r\n}\r\n\r\nexport default class Input extends React.Component<IInputProps, IInputState>{\r\n  constructor(prop: any) {\r\n    super(prop);\r\n    this.state = {\r\n      value: this.props.value,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label className='input-default'>\r\n        <span>{this.props.text}</span>\r\n        <input className='input-default__field'\r\n          onChange={this.ChangeValue.bind(this)}\r\n          type={this.props.type ? this.props.type : 'text'}\r\n          name={this.props.name}\r\n          value={this.state.value}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n\r\n  ChangeValue(ev: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({\r\n      value: ev.currentTarget.value,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: IInputProps) {\r\n    if (this.props.value !== prevProps.value)\r\n      this.setState({\r\n        value: this.props.value,\r\n      });\r\n  }\r\n\r\n}","import React from 'react';\r\nimport './AddEditConstruction.scss';\r\nimport { stateType } from '../../store/store';\r\nimport Button from '../Button/Button';\r\nimport Submit from '../Submit';\r\nimport Input from '../Input/Input';\r\nimport { addEditConstruction } from \"../../store/actions/ConstructionJSONArr/ConstructionJSONArr\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { closeAddEditConstructionForm } from '../../store/actions/actions';\r\n\r\ninterface ImapDispatchToProps {\r\n  addEditConstruction?: (formData: FormData) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  closeAddEditConstructionForm?: () => (dispatch: any, getState: () => stateType) => void;\r\n}\r\n\r\ninterface ImapStateToProps {\r\n  visible?: boolean;\r\n  constructionJSON?: {\r\n    id: number;\r\n    name: string;\r\n    address: string;\r\n    haveMachine: boolean;\r\n  };\r\n  headerName?: string;\r\n  submitName?: string;\r\n}\r\n\r\ninterface IAddConstructionProps extends ImapDispatchToProps, ImapStateToProps { }\r\n\r\nclass AddConstruction extends React.Component<IAddConstructionProps> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='add-edit-construction' style={this.props.visible ? { display: 'flex' } : { display: 'none' }}>\r\n        <div className='add-edit-construction__container'>\r\n          <div className='add-edit-construction__header'>\r\n            <span>{this.props.headerName}</span>\r\n            <div className='add-edit-construction__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-construction__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type='hidden' name='constructionId' value={this.props.constructionJSON ? `${this.props.constructionJSON.id}` : ''}></input>\r\n            <Input text='Введите название' name='name' value={this.props.constructionJSON ? this.props.constructionJSON.name : null}></Input>\r\n            <Input text='Введите адрес' name='address' value={this.props.constructionJSON ? this.props.constructionJSON.address : ''}></Input>\r\n            <div>\r\n              <div className='add-edit-construction__submit-container'>\r\n                <Submit name={this.props.submitName} />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private Close() {\r\n    this.props.closeAddEditConstructionForm();\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    this.props.addEditConstruction(formData);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state: stateType) {\r\n  return {\r\n    visible: state.addEditConstruction.visible,\r\n    constructionJSON: state.addEditConstruction.constructionJSON,\r\n    headerName: state.addEditConstruction.headerName,\r\n    submitName: state.addEditConstruction.submitName\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    addEditConstruction,\r\n    closeAddEditConstructionForm,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<ImapStateToProps, ImapDispatchToProps, IAddConstructionProps, stateType>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddConstruction);","import React from 'react';\r\nimport './AddEditRoom.scss';\r\nimport Submit from '../Submit';\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\nimport { closeAddEditRoomForm } from '../../store/actions/actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { stateType } from '../../store/store';\r\nimport { addEditRoomInConstruction } from '../../store/actions/Rooms/Rooms';\r\n\r\ninterface ImapStateToProps {\r\n  visible?: boolean;\r\n  roomJSON?: {\r\n    id: number;\r\n    name: string;\r\n    floor: number;\r\n    constructionId: number;\r\n    haveMachine: boolean\r\n  };\r\n  headerName?: string;\r\n  submitName?: string;\r\n  path?: string;\r\n}\r\n\r\ninterface ImapDispatchToProps {\r\n  closeAddEditRoomForm?: () => (dispatch: any, getState: () => stateType) => void;\r\n  addEditRoomInConstruction?: (formData: FormData) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n}\r\n\r\ninterface IAddEditRoomProps extends ImapStateToProps, ImapDispatchToProps {\r\n\r\n}\r\n\r\nclass AddEditRoom extends React.Component<IAddEditRoomProps> {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='add-edit-room' style={this.props.visible ? { display: 'flex' } : { display: 'none' }}>\r\n        <div className='add-edit-room__container'>\r\n          <div className='add-edit-room__header'>\r\n            <span>{this.props.headerName}</span>\r\n            <div className='add-edit-room__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-room__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type=\"hidden\" name='roomId' value={this.props.roomJSON ? this.props.roomJSON.id : 0} />\r\n            <input type=\"hidden\" name='constructionId' value={this.props.roomJSON ? this.props.roomJSON.constructionId : 0} />\r\n            <Input text='Введите название' name='name' value={this.props.roomJSON ? this.props.roomJSON.name : ''}></Input>\r\n            <Input text='Введите этаж' type='number' name='floor' value={this.props.roomJSON ? `${this.props.roomJSON.floor}` : ''}></Input>\r\n            <Submit name={this.props.submitName} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private Close() {\r\n    this.props.closeAddEditRoomForm();\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    this.props.addEditRoomInConstruction(formData);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state: stateType) {\r\n  return {\r\n    visible: state.addEditRoom.visible,\r\n    roomJSON: state.addEditRoom.roomJSON,\r\n    headerName: state.addEditRoom.headerName,\r\n    submitName: state.addEditRoom.submitName,\r\n    path: state.addEditRoom.path,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    addEditRoomInConstruction,\r\n    closeAddEditRoomForm,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<ImapStateToProps, ImapDispatchToProps, IAddEditRoomProps, stateType>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddEditRoom);","import React from 'react';\r\nimport './AddEditMachine.scss';\r\nimport Input from '../Input/Input';\r\nimport Submit from '../Submit';\r\nimport Button from '../Button/Button';\r\nimport { closeAddEditMachineForm } from '../../store/actions/actions';\r\nimport { addEditMachine } from '../../store/actions/Machines/Machines';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { stateType } from '../../store/store';\r\n\r\n\r\n\r\ninterface ImapStateToProps {\r\n  visible?: boolean;\r\n  machine?: {\r\n    id: number;\r\n    name: string;\r\n    createYear: number;\r\n    roomId: number;\r\n  };\r\n  headerName?: string;\r\n  submitName?: string;\r\n}\r\n\r\ninterface ImapDispatchToProps {\r\n  addEditMachine?: (formData: FormData) => (dispatch: any, getState: () => stateType) => Promise<any>;\r\n  closeAddEditMachineForm?: () => (dispatch: any, getState: () => stateType) => void;\r\n}\r\n\r\ninterface IAddEditMachineProps extends ImapStateToProps, ImapDispatchToProps { }\r\n\r\nclass AddEditMachine extends React.Component<IAddEditMachineProps>  {\r\n  constructor(prop: any) {\r\n    super(prop);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='add-edit-machine' style={this.props.visible ? { display: 'flex' } : { display: 'none' }}>\r\n        <div className='add-edit-machine__container'>\r\n          <div className='add-edit-machine__header'>\r\n            <span>{this.props.headerName}</span>\r\n            <div className='add-edit-machine__close'>\r\n              <Button name='Закрыть' ClickHandler={this.Close.bind(this)}></Button>\r\n            </div>\r\n          </div>\r\n          <form className='add-edit-machine__form' onSubmit={this.AddEditConstruction.bind(this)}>\r\n            <input type=\"hidden\" name='machineId' value={this.props.machine ? this.props.machine.id : 0} />\r\n            <input type=\"hidden\" name='roomId' value={this.props.machine ? this.props.machine.roomId : 0} />\r\n            <Input text='Введите название' name='name' value={this.props.machine ? this.props.machine.name : ''} />\r\n            <Input text='Введите год изготовления' type='number' name='createYear' value={this.props.machine ? `${this.props.machine.createYear}` : ''} />\r\n            <div>\r\n              <div className='add-edit-machine__submit-container'>\r\n                <Submit name={this.props.submitName} />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  private Close() {\r\n    this.props.closeAddEditMachineForm();\r\n  }\r\n\r\n  private async AddEditConstruction(ev: React.FormEvent) {\r\n    ev.preventDefault();\r\n    const formData = new FormData(ev.currentTarget as HTMLFormElement);\r\n    this.props.addEditMachine(formData);\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state: stateType) {\r\n  return {\r\n    visible: state.addEditMachine.visible,\r\n    machine: state.addEditMachine.machineJSON,\r\n    headerName: state.addEditMachine.headerName,\r\n    submitName: state.addEditMachine.submitName,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n  return bindActionCreators({\r\n    addEditMachine,\r\n    closeAddEditMachineForm,\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect<ImapStateToProps, ImapDispatchToProps, IAddEditMachineProps, stateType>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddEditMachine);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport AddConstruction from './components/AddEditConstruction/AddEditConstruction';\nimport AddRoom from './components/AddEditRoom/AddEditRoom';\nimport AddEditMachine from './components/AddEditMachine/AddEditMachine';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <AddConstruction />\n      <AddRoom />\n      <AddEditMachine />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n\n\n\n"],"sourceRoot":""}